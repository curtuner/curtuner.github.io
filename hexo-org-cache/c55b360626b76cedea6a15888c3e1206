{"md5":"1c0d195f818a475909ae80f06685150f","content":"\n\n\n<div id=\"outline-container-orgbe0413a\" class=\"outline-2\">\n<h2 id=\"orgbe0413a\"><span class=\"section-number-2\">1</span> 关键问题</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ol class=\"org-ol\">\n<li>Linux中进程的资源？如何分类？</li>\n<li>内核如何表示打开文件？（三个数据结构）</li>\n<li>Unix文件类型？</li>\n</ol>\n</div>\n</div>\n<div id=\"outline-container-org3fcb874\" class=\"outline-2\">\n<h2 id=\"org3fcb874\"><span class=\"section-number-2\">2</span> Linux相关实现</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-orgd91c21f\" class=\"outline-3\">\n<h3 id=\"orgd91c21f\"><span class=\"section-number-3\">2.1</span> 进程和task<sub>struct</sub></h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n所有的进程描述符都是task<sub>struct类型结构</sub>，主要包含进程状态\n</p>\n</div>\n<div id=\"outline-container-org8514302\" class=\"outline-4\">\n<h4 id=\"org8514302\"><span class=\"section-number-4\">2.1.1</span> 进程状态（五种）</h4>\n<div class=\"outline-text-4\" id=\"text-2-1-1\">\n<ul class=\"org-ul\">\n<li>TASK<sub>RUNNING</sub>: 要么在执行，要么准备执行</li>\n<li>TASK<sub>INTERRUPTIBLE</sub>：进程被挂起，直到一些条件为真。</li>\n<li>TASK<sub>UNIINTERRUPTIBLE</sub>：与前一个类似，但不会被信号中断，知道给定的事件发生</li>\n<li>TASK<sub>STOPPED</sub>：进程执行 <b>被</b> 暂停。当接收到特定的信号时进入暂停状态</li>\n<li>TASK<sub>ZOMBIE</sub>：进程被终止，但没有被父进程回收（用wait）</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-orgd8bcaff\" class=\"outline-2\">\n<h2 id=\"orgd8bcaff\"><span class=\"section-number-2\">3</span> 零散</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<ul class=\"org-ul\">\n<li>进程可以通过轻量级进程共享大部分数据结构</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-orgc3ccb77\" class=\"outline-2\">\n<h2 id=\"orgc3ccb77\"><span class=\"section-number-2\">4</span> 模块的理解</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n模块有几种，我们看待模块一般先通过看接口即可，一个设计得好的模块可以让我们通过接口就可以了解模块的使用。然而我们在理解POSIX时其实并没有那么容易来做到，原因是我们需要理解接口规范和接口的资源。而理解这些资源的知识要花去大量时间。一个模块一般包含各种接口，接口我认为包括纯函数接口和会产生副作用的接口。对于会产生副作用的接口，接口必须和操作的数据结构一起描述，对于无副作用的接口则没有这个要求，一般从功能和代码服用的角度来划分。对于过程式语言根据操作的数据结构来划分模块一般是更加常见的做法。值得一提的是模块一般还有不少常量，这些我们也可以认为是无副作用的函数。\n</p>\n</div>\n</div>\n<div id=\"outline-container-org6ac5339\" class=\"outline-2\">\n<h2 id=\"org6ac5339\"><span class=\"section-number-2\">5</span> <span class=\"todo TODO\">TODO</span> </h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li>wait函数族</li>\n<li>dup2()的直接语义是描述符的赋值</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-org90a827f\" class=\"outline-2\">\n<h2 id=\"org90a827f\"><span class=\"section-number-2\">6</span> 参考文献</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<ul class=\"org-ul\">\n<li>《深入理解Linux内核》</li>\n<li>《虚拟机&#x2013;系统与进程的通用平台》</li>\n</ul>\n</div>\n</div>\n\nLast Updated 2017-06-30 五 15:20.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.2.1 (<a href=\"http://orgmode.org\">Org</a> mode 9.0.8)\n"}
