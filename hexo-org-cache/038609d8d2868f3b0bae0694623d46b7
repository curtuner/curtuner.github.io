{"md5":"c070507e00f0156031ee8b7b0191d346","content":"\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 前言</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n本文主要包含三个部分，Apache Guacamole这个程序\n</p>\n<ul class=\"org-ul\">\n<li>Guacamole介绍\n</li>\n<li>Guacamole协议简介\n</li>\n<li>审计相关的功能和扩展\n</li>\n<li>Guacamole服务器模型\n</li>\n<li>部署方面的扩展\n</li>\n<li>下一步，如X协议\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> Apache Guacamole</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n首先这个名字是牛油果酱的意思，\n</p>\n</div>\n<div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> 概述</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<p>\n本章是对Guacamole协议的概述，描述它的设计和一般用途。虽然这里会介绍一些指令和语法，但这不会是一份详尽可用指令清单。本文的目的仅仅是列出一般的类型和用法，如果你在寻找某个具体指令的语法和用途，请参考附录中的协议参考。\n</p>\n</div>\n<div id=\"outline-container-sec-2-1-1\" class=\"outline-4\">\n<h4 id=\"sec-2-1-1\"><span class=\"section-number-4\">2.1.1</span> <span class=\"todo TODO\">TODO</span> 设计</h4>\n<div class=\"outline-text-4\" id=\"text-2-1-1\">\n<p>\nGuacamole协议由指令组成，每个指令都是一个以逗号分隔的列表，结尾跟一个终止用的分号。列表的第一个元素是指令的操作码，剩下的都是指令的参数：\n</p>\n\n<p>\nOPCODE, ARG1, ARG2, ARG3, &#x2026;;\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2-1-2\" class=\"outline-4\">\n<h4 id=\"sec-2-1-2\"><span class=\"section-number-4\">2.1.2</span> 事件</h4>\n<div class=\"outline-text-4\" id=\"text-2-1-2\">\n<p>\n当客户端或者服务器有什么东西改变，如某个键被按下、鼠标被移动、剪切板数据改变时，会发送一个指令来说明事件的发生。\n</p>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> app.js</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\n这是guacamole的js文件，应该是动态生成的\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\"><span class=\"section-number-2\">4</span> websocket模块</h2>\n</div>\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\"><span class=\"section-number-2\">5</span> Guacamole配置</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n</div><div id=\"outline-container-sec-5-1\" class=\"outline-3\">\n<h3 id=\"sec-5-1\"><span class=\"section-number-3\">5.1</span> 简单配置（仅用于开发环境）</h3>\n<div class=\"outline-text-3\" id=\"text-5-1\">\n<p>\nGuacamole默认的认证方式是从一个名为user-mapping.xml读取所有用户和连接的信息。Guacamole的配置主要包括两个部分：\n</p>\n<ul class=\"org-ul\">\n<li>全局变量GUACAMOLE<sub>HOME指向默认的搜索位置</sub>\n</li>\n<li>guacamole-properties\n</li>\n</ul>\n</div>\n<div id=\"outline-container-sec-5-1-1\" class=\"outline-4\">\n<h4 id=\"sec-5-1-1\"><span class=\"section-number-4\">5.1.1</span> guacamole-properties配置选项</h4>\n<div class=\"outline-text-4\" id=\"text-5-1-1\">\n<ul class=\"org-ul\">\n<li>guacd-ssl：如果设置为true，Guacamole会要求Web服务器和guacd使用SSL/TLS加密。默认情况下是不加密的\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\"><span class=\"section-number-2\">6</span> guacamole-tunnel(直接的处理逻辑应该去看servlet)</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n主要还是关注websocket部分，其实没有必要两个部分都关注，相关的对象包括：\n</p>\n<ul class=\"org-ul\">\n<li>javax.websocket.server.HandshakeRequest\n</li>\n<li>WebSocketTunnelRequest\n</li>\n<li>TunnelRequest：提供了函数用于获得和连接到tunnel\n</li>\n</ul>\n</div>\n<div id=\"outline-container-sec-6-1\" class=\"outline-3\">\n<h3 id=\"sec-6-1\"><span class=\"section-number-3\">6.1</span> 获取一个tunnel的参数（或者说该有的信息）</h3>\n<div class=\"outline-text-3\" id=\"text-6-1\">\n<ul class=\"org-ul\">\n<li>用户认证信息\n</li>\n<li>认证提供者的信息\n</li>\n<li>请求的连接类型：1) Gucamole connection 2) Guacamole 连接组\n</li>\n<li>tunnel的id\n</li>\n<li>显示的宽度\n</li>\n<li>显示的高度\n</li>\n<li>DPI\n</li>\n<li>音频类型，会在一个tunnel中多次出现\n</li>\n<li>视频类型，会在一个tunnel中多次出现\n</li>\n<li>图片类型，会在一个tunnel中多次出现\n</li>\n</ul>\n<p>\n注意：\n</p>\n<ul class=\"org-ul\">\n<li>这个对象的类型应该有三种，guacamole连接和guacamole group连接，同时还有目标地址\n</li>\n<li>另外这个对象是原始对象，即可以代表http tunnel，也可以代表websocket。\n</li>\n</ul>\n\n<p>\n如果是WebSocket需要加上WebSocket的信息，这个要看服务器提供了什么接口。在Java实现里只是提供了这些参数的获取方式\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-6-2\" class=\"outline-3\">\n<h3 id=\"sec-6-2\"><span class=\"section-number-3\">6.2</span> 连接建立过程</h3>\n<div class=\"outline-text-3\" id=\"text-6-2\">\n<p>\n首先，websocket的连接能完全建立是需要和guacd的连接也完成的情况下，\n</p>\n<ol class=\"org-ol\">\n<li>收到连接请求\n</li>\n<li>尝试连接后台\n</li>\n<li>若可以，则建立转发线程。若不行则关闭连接，写一下日志。\n</li>\n</ol>\n</div>\n</div>\n<div id=\"outline-container-sec-6-3\" class=\"outline-3\">\n<h3 id=\"sec-6-3\"><span class=\"section-number-3\">6.3</span> 建立guactunnel的过程</h3>\n<div class=\"outline-text-3\" id=\"text-6-3\">\n</div><div id=\"outline-container-sec-6-3-1\" class=\"outline-4\">\n<h4 id=\"sec-6-3-1\"><span class=\"section-number-4\">6.3.1</span> 连接需要的信息</h4>\n<div class=\"outline-text-4\" id=\"text-6-3-1\">\n<ul class=\"org-ul\">\n<li>TunnelRequest\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-6-3-2\" class=\"outline-4\">\n<h4 id=\"sec-6-3-2\"><span class=\"section-number-4\">6.3.2</span> 步骤</h4>\n<div class=\"outline-text-4\" id=\"text-6-3-2\">\n<ol class=\"org-ol\">\n<li>首先会看建立的直接建立。\n</li>\n<li>其实关键还是建立TCP或者建立SSL连接。\n</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\"><span class=\"section-number-2\">7</span> guacamole-common-js</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n<p>\n这个模块实现了\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\"><span class=\"section-number-2\">8</span> 审计相关</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n</div><div id=\"outline-container-sec-8-1\" class=\"outline-3\">\n<h3 id=\"sec-8-1\"><span class=\"section-number-3\">8.1</span> 历史文件</h3>\n<div class=\"outline-text-3\" id=\"text-8-1\">\n<p>\n历史文件是字符文件，包含内部主要包含guacamole关键字，关键字参数，以及base64编码的数据，这里我截取文件开头的一个片段：\n</p>\n\n<p>\n4.name,36.curt's X desktop (curt-VirtualBox:1);4.size,1.0,4.1024,3.768;4.size,2.-1,2.11,2.16;3.img,1.1,2.12,2.-1,9.image/png,1.0,1.0;4.blob,1.1,232.iVBORw0KGgoAAAANSUhEUgAAAAsAAAAQCAYAAADAvYV+AAAABmJLR0QA/wD/AP+gvaeTAAAAYklEQVQokY2RQQ4AIQgDW+L/v9y9qCEsIJ4QZggoJAnDYwAwFQwASI4EO8FEMH95CRYTnfCDOyGFK6GEM6GFo7AqKI4sSSsCJH1X+roFkKdjueABX/On77lz2uGtr6pj9okfTeJQAYVaxnMAAAAASUVORK5CYII=;3.end,1.1;6.cursor,1.0,1.0,2.-1,1.0,1.0,2.11,2.16;4.size,2.-1,2.24,2.24;3.img,1.1,2.12,2.-1,9.image/png,1.0,1.0;4.blob,1.1,276.iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABmJLR0QA/wD/AP+gvaeTAAAAgklEQVRIid3UwQ6AMAgDUDD+/y/jxSxocNDiLiPxtKTPFaPIzmN/hByrkQxoI1PAbGTTSHqDLlKpyCNrAIfAUhlgEQhgEBhAEQpAEBqoIicaqqqhJSLhAbtkuQP9E04JUNWvN08nBXzwC+l/RS7wUQPy66hUNOsmlZhifSi3GBDZfC7hyTEQJYJV8QAAAABJRU5ErkJggg==;3.end,1.1;6.cursor,1.7,1.4,2.-1,1.0,1.0,2.24,2.24;3.img,1.1,2.14,1.0,9.image/png,1.0,1.0;4.blob,1.1,8064.iVBORw0KGgoAAAANSUhEUgAABAAAAAMACAIA\n</p>\n\n<p>\n可以看到都是字符，blob关键字用于传输数据，第一个传输的数据是一个鼠标图像：\n[[]]\n</p>\n\n<p>\n说白了，审计主要是对这块的数据进行分析，能做到的事情大概有：\n</p>\n<ul class=\"org-ul\">\n<li>还原成为录像。\n</li>\n<li>查询用户的操作。\n</li>\n<li>图像模式匹配\n</li>\n</ul>\n<p>\n** 图像还原\nguacamole实现了简单的图像还原工具guacenc，原理很简单。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-8-2\" class=\"outline-3\">\n<h3 id=\"sec-8-2\"><span class=\"section-number-3\">8.2</span> 查询用户操作</h3>\n<div class=\"outline-text-3\" id=\"text-8-2\">\n<p>\nGuacamole协议对于每个字段，开头会指明其长度\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-8-3\" class=\"outline-3\">\n<h3 id=\"sec-8-3\"><span class=\"section-number-3\">8.3</span> 重要的协议指令</h3>\n</div>\n</div>\n<div id=\"outline-container-sec-9\" class=\"outline-2\">\n<h2 id=\"sec-9\"><span class=\"section-number-2\">9</span> 工作</h2>\n<div class=\"outline-text-2\" id=\"text-9\">\n<p>\n今后会集中在之后的工作量：\n</p>\n<ul class=\"org-ul\">\n<li>移植到Django或者Tornado上（工作量比较大）\n</li>\n<li>以guacd为核心，编写VNC和RDP服务器，之后再考虑编写\n</li>\n<li>X11代理可能之后也会实现，相比之下X11的技术难点更加不好解决，尤其审计如果X11也要支持，开销会比较大，而且X11协议没有加密，说一般还要通过ssh隧道了转发，如果要加密，复杂性会进一步提升，设计到的其他协议的各种细节。尤其要纳入这个框架里面，问题就更大。\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-10\" class=\"outline-2\">\n<h2 id=\"sec-10\"><span class=\"section-number-2\">10</span> guacd</h2>\n<div class=\"outline-text-2\" id=\"text-10\">\n<p>\n采用多线程模型，每个连接一个线程。这里的连接一开始是服务器到guacd的连接，guacd随即初始化。这个连接是从浏览器而来。接下来就是后端的握手的过程* libguac库。该库主要用于开发客户端模块插件，如libguac-client-rdp、libguac-client-rdp。或者使用用于开发一个代理。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-11\" class=\"outline-2\">\n<h2 id=\"sec-11\"><span class=\"section-number-2\">11</span> 虚拟驱动器</h2>\n</div>\n<div id=\"outline-container-sec-12\" class=\"outline-2\">\n<h2 id=\"sec-12\"><span class=\"section-number-2\">12</span> 资源</h2>\n<div class=\"outline-text-2\" id=\"text-12\">\n<ul class=\"org-ul\">\n<li>图片\n</li>\n<li>视频\n</li>\n<li>音频\n</li>\n<li>文件\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-13\" class=\"outline-2\">\n<h2 id=\"sec-13\"><span class=\"section-number-2\">13</span> VNC模块</h2>\n<div class=\"outline-text-2\" id=\"text-13\">\n<p>\nGuacamole的VNC支持是通过库libguac-client-vnc  VNC服务器的端口号一般输出5900或者5901\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-14\" class=\"outline-2\">\n<h2 id=\"sec-14\"><span class=\"section-number-2\">14</span> guacd主流程</h2>\n<div class=\"outline-text-2\" id=\"text-14\">\n<p>\nrdp或者vnc这类连接都是比较长期的，不会频繁断开重连，所以不需要多路复用。直接使用最基本的accept就好。\n</p>\n<ol class=\"org-ol\">\n<li>用户连接，建立一个文件描述符\n</li>\n<li>为这个文件描述符建立一个线程，之后分离\n</li>\n<li>使用这个文件描述符建立一个对象，guac<sub>socket，</sub>\n</li>\n<li>之后利用这个socket，选择协议（连接guacd本来就是为了打开某个协议，这里要选择客户端)，select指令（在guacd<sub>route</sub><sub>connection中）</sub>\n</li>\n<li>根据选择的协议建立一个协议客户进程，这里的进程也纳入管理\n</li>\n<li>进入主循环等待连接，这些连接属于用户发起\n</li>\n</ol>\n<p>\n可见每个连接会发起一个进程，共享\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-15\" class=\"outline-2\">\n<h2 id=\"sec-15\"><span class=\"section-number-2\">15</span> 开发</h2>\n<div class=\"outline-text-2\" id=\"text-15\">\n<p>\nxrdp和guacamole都是事件驱动模型，一个用户有多个client\n</p>\n</div>\n<div id=\"outline-container-sec-15-1\" class=\"outline-3\">\n<h3 id=\"sec-15-1\"><span class=\"section-number-3\">15.1</span> 如何记录</h3>\n<div class=\"outline-text-3\" id=\"text-15-1\">\n<p>\n关键是要实时监控，在写socket的时候要写另一个位置，所以是在socket的handler处监控。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-15-2\" class=\"outline-3\">\n<h3 id=\"sec-15-2\"><span class=\"section-number-3\">15.2</span> 两个</h3>\n</div>\n<div id=\"outline-container-sec-15-3\" class=\"outline-3\">\n<h3 id=\"sec-15-3\"><span class=\"section-number-3\">15.3</span> 原型</h3>\n</div>\n</div>\n<div id=\"outline-container-sec-16\" class=\"outline-2\">\n<h2 id=\"sec-16\"><span class=\"section-number-2\">16</span> 性能</h2>\n<div class=\"outline-text-2\" id=\"text-16\">\n<p>\n现在看来性能上，一个guacd大体占用25MB，一般认为\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-17\" class=\"outline-2\">\n<h2 id=\"sec-17\"><span class=\"section-number-2\">17</span> 零散</h2>\n<div class=\"outline-text-2\" id=\"text-17\">\n<ul class=\"org-ul\">\n<li>Guacamole的代理程序叫做gucad，服务器使用socket和gucad沟通=\n</li>\n<li>VNC速度上步入RDP\n</li>\n<li>Guacamole上的VNC通过减少带宽的使用提升了VNC的效率\n</li>\n<li>有趣的是这些都使用了事件循环的形式来达成目的，librdp和libvnc都是一样\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-18\" class=\"outline-2\">\n<h2 id=\"sec-18\"><span class=\"section-number-2\">18</span> <span class=\"todo TODO\">TODO</span> 问题 <code>[%]</code></h2>\n<div class=\"outline-text-2\" id=\"text-18\">\n<ul class=\"org-ul\">\n<li><code>[&#xa0;]</code> freerdp目前新版本发生了很多改变，guacamole作者打算freerdp到2.0之后跟进，目前只能先用老版本。\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-19\" class=\"outline-2\">\n<h2 id=\"sec-19\"><span class=\"section-number-2\">19</span> 逻辑（url-服务）</h2>\n<div class=\"outline-text-2\" id=\"text-19\">\n<p>\nJetty与\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-20\" class=\"outline-2\">\n<h2 id=\"sec-20\"><span class=\"section-number-2\">20</span> 参考</h2>\n<div class=\"outline-text-2\" id=\"text-20\">\n<ul class=\"org-ul\">\n<li><a href=\"http://guacamole.apache.org/doc/gug/\">Guacamole Manual</a>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-21\" class=\"outline-2\">\n<h2 id=\"sec-21\"><span class=\"section-number-2\">21</span> Guacamole协议参考</h2>\n<div class=\"outline-text-2\" id=\"text-21\">\n</div><div id=\"outline-container-sec-21-1\" class=\"outline-3\">\n<h3 id=\"sec-21-1\"><span class=\"section-number-3\">21.1</span> 绘制指令</h3>\n<div class=\"outline-text-3\" id=\"text-21-1\">\n</div><div id=\"outline-container-sec-21-1-1\" class=\"outline-4\">\n<h4 id=\"sec-21-1-1\"><span class=\"section-number-4\">21.1.1</span> arc（弧线）</h4>\n</div>\n<div id=\"outline-container-sec-21-1-2\" class=\"outline-4\">\n<h4 id=\"sec-21-1-2\"><span class=\"section-number-4\">21.1.2</span> cfill（填充颜色）</h4>\n<div class=\"outline-text-4\" id=\"text-21-1-2\">\n<p>\n用指定颜色来填充但前路径。这个指令会完成当前路径的绘制。之后的路径绘制指令会从一个新的路径开始\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-21-1-3\" class=\"outline-4\">\n<h4 id=\"sec-21-1-3\"><span class=\"section-number-4\">21.1.3</span> clip</h4>\n</div>\n<div id=\"outline-container-sec-21-1-4\" class=\"outline-4\">\n<h4 id=\"sec-21-1-4\"><span class=\"section-number-4\">21.1.4</span> close</h4>\n<div class=\"outline-text-4\" id=\"text-21-1-4\">\n<p>\n用直线连接起点和终点，从而关闭但前路径。\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-21-2\" class=\"outline-3\">\n<h3 id=\"sec-21-2\"><span class=\"section-number-3\">21.2</span> 流指令（Streaming instructions）</h3>\n<div class=\"outline-text-3\" id=\"text-21-2\">\n</div><div id=\"outline-container-sec-21-2-1\" class=\"outline-4\">\n<h4 id=\"sec-21-2-1\"><span class=\"section-number-4\">21.2.1</span> img</h4>\n<div class=\"outline-text-4\" id=\"text-21-2-1\">\n<p>\n分配一个新的流，同用于更新的图片的元数据相关联，包括目标图层、目标坐标系。图片的内容之后被blob指令通过流传输。图片的实际长度不需要在这条指令中被提前知道。\n</p>\n<ul class=\"org-ul\">\n<li>stream：被分配的流的索引\n</li>\n<li>mimetype：被发送的图片类型\n</li>\n<li>mask：绘制图片的市场在使用的channel mask\n</li>\n<li>layer：目标图层\n</li>\n<li>x：目标图层的以左上角为原点的x轴坐标\n</li>\n<li>y：目标图层的以左上角为原点的y轴坐标\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-21-2-2\" class=\"outline-4\">\n<h4 id=\"sec-21-2-2\"><span class=\"section-number-4\">21.2.2</span> blob</h4>\n<div class=\"outline-text-4\" id=\"text-21-2-2\">\n<p>\n用给定的stream发送一个blob的数据，这个blob的数据可以是任意的base64编码的数据，以及只对Guacamole的客户端和服务器有价值的，当streeam被分配并且：\n</p>\n<ul class=\"org-ul\">\n<li>stream：数据应该被发送的stream索引\n</li>\n<li>data：需要被发送的base64编码的数据\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-21-2-3\" class=\"outline-4\">\n<h4 id=\"sec-21-2-3\"><span class=\"section-number-4\">21.2.3</span> end</h4>\n<div class=\"outline-text-4\" id=\"text-21-2-3\">\n<p>\n这个指令用于终止一个打开的stream，释放任何服务端或者客户端的资源。发送到stream的流都会忽略。用end指令来终止一个流只代表一个流的终止而不会暗示某个错误。\n</p>\n<ul class=\"org-ul\">\n<li>stream：对应的接受blob的流的索引\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-21-3\" class=\"outline-3\">\n<h3 id=\"sec-21-3\"><span class=\"section-number-3\">21.3</span> 对象指令（Object instructions）</h3>\n</div>\n<div id=\"outline-container-sec-21-4\" class=\"outline-3\">\n<h3 id=\"sec-21-4\"><span class=\"section-number-3\">21.4</span> 客户端握手指令</h3>\n</div>\n<div id=\"outline-container-sec-21-5\" class=\"outline-3\">\n<h3 id=\"sec-21-5\"><span class=\"section-number-3\">21.5</span> 服务器控制指令（erver control instructions）</h3>\n</div>\n<div id=\"outline-container-sec-21-6\" class=\"outline-3\">\n<h3 id=\"sec-21-6\"><span class=\"section-number-3\">21.6</span> 客户端事件</h3>\n<div class=\"outline-text-3\" id=\"text-21-6\">\n</div><div id=\"outline-container-sec-21-6-1\" class=\"outline-4\">\n<h4 id=\"sec-21-6-1\"><span class=\"section-number-4\">21.6.1</span> key</h4>\n<div class=\"outline-text-4\" id=\"text-21-6-1\">\n<p>\n发送特定按键的按下或者释放的事件\n</p>\n<ul class=\"org-ul\">\n<li>keysym：被按下或者释放的按键的X11 keysym\n</li>\n<li>pressed：0代表按键没被按下，1代表按键被按下\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-21-6-2\" class=\"outline-4\">\n<h4 id=\"sec-21-6-2\"><span class=\"section-number-4\">21.6.2</span> mouse</h4>\n<div class=\"outline-text-4\" id=\"text-21-6-2\">\n<ul class=\"org-ul\">\n<li>x：当前鼠标的X坐标。\n</li>\n<li>y：当前鼠标的Y坐标。\n</li>\n<li>mask：按钮的massk，表示鼠标的按钮被按下或者被释放的状态。\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-21-6-3\" class=\"outline-4\">\n<h4 id=\"sec-21-6-3\"><span class=\"section-number-4\">21.6.3</span> size</h4>\n<div class=\"outline-text-4\" id=\"text-21-6-3\">\n<p>\n说明客户端的最优屏幕尺寸已经从握手的时候指定的最优尺寸改变了，或者相对上次发送size指令改变了。\n</p>\n<ul class=\"org-ul\">\n<li>width：新的最优屏幕宽度\n</li>\n<li>height：新的最优屏幕高度\n</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n\nLast Updated 2018-03-04 日 03:01.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.3.1 (<a href=\"http://orgmode.org\">Org</a> mode 8.2.10)\n"}
