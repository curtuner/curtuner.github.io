{"md5":"5e6ad6e02b7f575d23e80bbc2cce8647","content":"\n\n\n<div id=\"outline-container-org9a425cc\" class=\"outline-2\">\n<h2 id=\"org9a425cc\"><span class=\"section-number-2\">1</span> 主要问题</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>如何避免差的节点持续竞争信道</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-org7b66c5f\" class=\"outline-2\">\n<h2 id=\"org7b66c5f\"><span class=\"section-number-2\">2</span> CSMA/CA（一种随机接入机制）</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-org65a33b2\" class=\"outline-3\">\n<h3 id=\"org65a33b2\"><span class=\"section-number-3\">2.1</span> 基本过程描述</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<ol class=\"org-ol\">\n<li>station有数据发送时，先等待DIFS时间，监听信道，如果空闲则进入backoff过程</li>\n<li>从contention window选择一个随机回退值，代表等待的slot time的数目，每经过一个slot time就监听一次信道，若空闲则随机回退值减一。</li>\n<li>随机回退值为零时，发送数据，AP在接收到数据之后，进行CRC校验，若通过则等待SIFS之后发送ACK帧</li>\n<li>当station收到相应的ACK帧后，传输完成。若ack time out，则认为失败，等待EIFS时间而不是DIFS之后进行BEB，重新开始backoff过程。</li>\n</ol>\n</div>\n</div>\n<div id=\"outline-container-org06c85a2\" class=\"outline-3\">\n<h3 id=\"org06c85a2\"><span class=\"section-number-3\">2.2</span> 理解</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<p>\n主要是随机接入和错误重传机制\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-orgf26c6ec\" class=\"outline-2\">\n<h2 id=\"orgf26c6ec\"><span class=\"section-number-2\">3</span> 802.11各类帧</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n</div><div id=\"outline-container-orgf00faa7\" class=\"outline-3\">\n<h3 id=\"orgf00faa7\"><span class=\"section-number-3\">3.1</span> 使用iw监听无线网络</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<p>\n使用 iw 不仅可以实现和 iwconfig 完全一样的功能，而且它的用法要更丰富。我先用iw将新增一个虚拟网卡接口mon0,并将网卡mon0设置为监听模式：\n</p>\n<div class=\"org-src-container\">\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">iw dev wlan0 interface add mon0 <span class=\"built_in\">type</span> monitor</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n之后在启动网卡\n</p>\n<div class=\"org-src-container\">\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip link <span class=\"built_in\">set</span> mon0 up</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n之后就可以使用wireshark来捕获了\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-org1f5876a\" class=\"outline-2\">\n<h2 id=\"org1f5876a\"><span class=\"section-number-2\">4</span> 要点</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li>802.11的DCF模式和其核心的CSMA/CA模式</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-org9296401\" class=\"outline-2\">\n<h2 id=\"org9296401\"><span class=\"section-number-2\">5</span> 参考</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<ul class=\"org-ul\">\n<li><a href=\"http://www.aneasystone.com/archives/2016/08/wireless-analysis-one-monitoring.html\">无线网络抓包</a></li>\n</ul>\n</div>\n</div>\n\nLast Updated 2017-04-18 二 15:56.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.2.1 (<a href=\"http://orgmode.org\">Org</a> mode 9.0.5)\n"}
