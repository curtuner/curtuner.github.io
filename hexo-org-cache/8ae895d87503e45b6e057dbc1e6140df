{"md5":"e60492f6228db05264627cd46b760b94","content":"\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 前言</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n偶然看到一个一个用c语言写的简单正则表达式引擎。实现虽然简单，但总觉得代码理解起来不大容易，所以决定将代码按自己的想法重新实现一遍。代价可能是代码的行数要增加不少，而且可能会带来很多不必要的函数。所以这是一次个人代码风格的探讨。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 一般正则表达式转后缀格式</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n这里的基本处理思路其实是对于操作符的理解，什么时候满足操作符的处理条件，后缀表达式的优点是但我们读到操作符时运算符的使用条件就已经满足了，说白了后缀表达式把运算顺序化了。在语法树中，这是一种自底向上的格式。\n后缀表达式把栈暴露的出来，同时它可以很容易地避免栈溢出的问题。\nC语言编写函数的过程中，我们使用的每个过程都需要满足前置条件\n任何操作符或者函数都是满足条件了才可以使用\n中缀转后缀其实大家都比较熟悉，但如果想用同样的方法来处理其实是不行的，因为一般正则表达式其实可以看作是中缀和后缀表达式的混合。当然也因为这个原因，把一般正则表达式转化为后缀表达式就显得有必要。\n首先，无论是中缀还是后缀，两者的字符处理顺序都是相同的，所以读入字符时，都是直接写入输出字符串的。对于Kleene星号（*），优先级最高的一元表达式，所以只要格式合理，也是直接写入输出字符串中。选择符号是二元运算符，所以必须先记录下来，等到条件满足的时候才可以写入输出字符串中，正则表达式格式。拼接操作符在正则表达式中没有显示之后也是最重要的括号表达式，它的目标是自定义运算顺序，括号内要形成一个独立的正则表达式，这和我们在外面的目标相同，所以很自然地想到了压栈的做法。压栈的目的是保留未。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> 后缀表达式在虚拟机中的应用</h2>\n</div>\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\"><span class=\"section-number-2\">4</span> 中缀表达式转后缀</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\n学过一点体系结构的都知道，处理器都是先法数据存储到寄存器中，再进行计算的。所以后缀表达其实更加贴近机器的处理过程。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\"><span class=\"section-number-2\">5</span> NFA（非确定性有限自动机）</h2>\n</div>\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\"><span class=\"section-number-2\">6</span> <span class=\"todo TODO\">TODO</span> 问题 <code>[%]</code></h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n</div><div id=\"outline-container-sec-6-1\" class=\"outline-3\">\n<h3 id=\"sec-6-1\"><span class=\"section-number-3\">6.1</span> <span class=\"todo TODO\">TODO</span> 小问题 <code>[%]</code></h3>\n</div>\n<div id=\"outline-container-sec-6-2\" class=\"outline-3\">\n<h3 id=\"sec-6-2\"><span class=\"section-number-3\">6.2</span> 前缀和后缀是否是对称的？</h3>\n</div>\n<div id=\"outline-container-sec-6-3\" class=\"outline-3\">\n<h3 id=\"sec-6-3\"><span class=\"section-number-3\">6.3</span> Python、Java和llvm字节码是否使用的后缀，如果是前缀需要使用一个栈来保留处理信息？</h3>\n</div>\n</div>\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\"><span class=\"section-number-2\">7</span> 参考</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n<ul class=\"org-ul\">\n<li>《程序设计语言&#x2013;实践之路》\n</li>\n<li></li>\n</ul>\n</div>\n</div>\n\nLast Updated 2017-09-05 二 11:47.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.3.1 (<a href=\"http://orgmode.org\">Org</a> mode 8.2.10)\n"}
