{"md5":"bcdb776ac97775ec2f3786e818044e93","content":"\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 引言</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\nMaven 是一个项目管理和构建自动化工具。Maven 使用惯例优于配置的原则。\n</p>\n\n<table border=\"2\" cellspacing=\"0\" cellpadding=\"6\" rules=\"groups\" frame=\"hsides\">\n\n\n<colgroup>\n<col class=\"left\">\n\n<col class=\"left\">\n</colgroup>\n<thead>\n<tr>\n<th scope=\"col\" class=\"left\">目录</th>\n<th scope=\"col\" class=\"left\">目的</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"left\">$(basedir)</td>\n<td class=\"left\">存放pom.xml和所有子目录</td>\n</tr>\n\n<tr>\n<td class=\"left\">$(basedir)/src/main/java</td>\n<td class=\"left\">项目的java源代码文件</td>\n</tr>\n\n<tr>\n<td class=\"left\">$(basedir)/src/main/resources</td>\n<td class=\"left\">项目的资源，比如property文件</td>\n</tr>\n\n<tr>\n<td class=\"left\">$(basedir)/src/test/java</td>\n<td class=\"left\">项目的测试类，比如JUnit代码</td>\n</tr>\n\n<tr>\n<td class=\"left\">$(basedir)/src/test/resources</td>\n<td class=\"left\">测试使用的资源</td>\n</tr>\n</tbody>\n</table>\n\n<p>\n一个maven项目默认会产生JAR文件，编译完成后，classes文件会放在$(basedir)/target/classes下面，JAR文件会放在$(basedir)/target\npom.xml用于描述项目，Project Object Model，这个文件用于描述项目，配置插件和管理依赖关系，\nmaven的archetype会建立项目目录\n</p>\n</div>\n<div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> 构建和运行程序</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n<p>\nmaven一般使用下面命令来构建和编译项目：\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">mvn package</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n编译后的class文件放在target/classes/目录下\n</p>\n\n<p>\n一般来说，每个maven项目会有pom.xml，大项目由几个小项目组成\n</p>\n\n<p>\narchetype是一个插件的名字，archetype:\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> maven坐标</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\ngroupId、artifactId、version定位一个maven项目\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> maven远程库</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n<p>\nmaven默认有远程库，远程库包含一些核心插件和jar文件，maven下载了远程库的东西后，会在本地留下一份拷贝，maven查找需要的jar文件的时候，会现在本地库中查找，只有在找不到的情况下，才会去远程库中查找。本地库中查找，当然也可以把自己的项目安装到本地库中。\nJava默认了会需要多人协作，\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\"><span class=\"section-number-2\">4</span> maven依赖管理</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<p>\nmaven会自己分析依赖的链\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\"><span class=\"section-number-2\">5</span> maven插件</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\nmaven是依靠插件来完成任务的，所以即使插件更新也可以很方便。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\"><span class=\"section-number-2\">6</span> 聚合项目</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n聚合项目由一个父模块和一个子摸块组成，其中父模块的打包类型是pom，每个module都是独立的maven项目\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\"><span class=\"section-number-2\">7</span> guacamole</h2>\n</div>\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\"><span class=\"section-number-2\">8</span> 参考</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n<ul class=\"org-ul\">\n<li><a href=\"http://www.oracle.com/technetwork/cn/community/java/apache-maven-getting-started-1-406235-zhs.html\">Apache Maven 入门篇 ( 上 )</a>\n</li>\n</ul>\n</div>\n</div>\n\nLast Updated 2018-03-04 日 03:01.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.3.1 (<a href=\"http://orgmode.org\">Org</a> mode 8.2.10)\n"}
