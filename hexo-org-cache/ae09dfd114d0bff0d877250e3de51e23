{"md5":"d505ac7cd35dcd10c135c0d79bda71a4","content":"\n\n\n<div id=\"outline-container-org17f3f4b\" class=\"outline-2\">\n<h2 id=\"org17f3f4b\"><span class=\"section-number-2\">1</span> 引言</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<p>\n本文旨在记录使用org-mode做自动化报告的过程，当然，不搞学术所以也没想弄成pdf，只要网页能显示对我来说就足够了。我把所有能用到的都使用一遍，作为今后的一个参照。\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgd05ee99\" class=\"outline-2\">\n<h2 id=\"orgd05ee99\"><span class=\"section-number-2\">2</span> <span class=\"todo TODO\">TODO</span> 在网页中显示图片</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\n为了解决hexo图片路径和org-mode冲突的问题，需要安装\n</p>\n</div>\n</div>\n<div id=\"outline-container-org623b551\" class=\"outline-2\">\n<h2 id=\"org623b551\"><span class=\"section-number-2\">3</span> 嵌入程序</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n</div><div id=\"outline-container-org4ee3ee7\" class=\"outline-3\">\n<h3 id=\"org4ee3ee7\"><span class=\"section-number-3\">3.1</span> 启动嵌入代码的功能</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<p>\nEmacs支持在org-mode中嵌入代码，目前支持的代码的类型包括：\n\\[a+b=c\\]\n<img src=\"./编写网页文档/org-suport-languages.png\" alt=\"org-suport-languages.png\">\n启动语言支持的方法是在初始化文件加入如下代码\n</p>\n<div class=\"org-src-container\">\n<figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">(org-babel-do-load-languages</span><br><span class=\"line\">'org-babel-load-languages</span><br><span class=\"line\">`((R . t)</span><br><span class=\"line\">  (ditaa . t)</span><br><span class=\"line\">  (dot . t)</span><br><span class=\"line\">  (emacs-lisp . t)</span><br><span class=\"line\">  (gnuplot . t)</span><br><span class=\"line\">  (haskell . nil)</span><br><span class=\"line\">  (latex . t)</span><br><span class=\"line\">  (ledger . t)</span><br><span class=\"line\">  (ocaml . nil)</span><br><span class=\"line\">  (octave . t)</span><br><span class=\"line\">  (python . t)</span><br><span class=\"line\">  (ruby . t)</span><br><span class=\"line\">  (screen . nil)</span><br><span class=\"line\">  (,(if (locate-library \"ob-sh\") 'sh 'shell) . t)</span><br><span class=\"line\">  (sql . nil)</span><br><span class=\"line\">  (sqlite . t))))</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n<div id=\"outline-container-org2f907d2\" class=\"outline-3\">\n<h3 id=\"org2f907d2\"><span class=\"section-number-3\">3.2</span> 嵌入Python代码</h3>\n<div class=\"outline-text-3\" id=\"text-3-2\">\n<p>\n关键在于对org-babel的使用，前面启动好了以后，为了让它可以在网页和org文件中同时显示要做一点额外的事情。先看一个实例\n</p>\n<div class=\"org-src-container\">\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> pylab <span class=\"keyword\">as</span> pl</span><br><span class=\"line\"><span class=\"keyword\">from</span> numpy <span class=\"keyword\">import</span> sin, pi, linspace</span><br><span class=\"line\">t = linspace(<span class=\"number\">0</span>, <span class=\"number\">2</span>*pi, <span class=\"number\">100</span>)</span><br><span class=\"line\">pl.plot(t, sin(t))</span><br><span class=\"line\">pic = <span class=\"string\">'plot_test.png'</span></span><br><span class=\"line\">pl.savefig(<span class=\"string\">\"./&amp;#32534;&amp;#20889;&amp;#32593;&amp;#39029;&amp;#25991;&amp;#26723;/{}\"</span>.format(pic))</span><br><span class=\"line\">print(<span class=\"string\">\"#+caption: test python plot\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">'[[./&amp;#32534;&amp;#20889;&amp;#32593;&amp;#39029;&amp;#25991;&amp;#26723;/{}]]'</span>.format(pic))</span><br></pre></td></tr></table></figure>\n</div>\n\n\n<div class=\"figure\">\n<p><img src=\"./编写网页文档/plot_test.png\" alt=\"plot_test.png\">\n</p>\n<p><span class=\"figure-number\">Figure 1: </span>test python plot</p>\n</div>\n</div>\n</div>\n</div>\n\n\n<div id=\"outline-container-org91cc26d\" class=\"outline-2\">\n<h2 id=\"org91cc26d\"><span class=\"section-number-2\">4</span> 参考</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n<ul class=\"org-ul\">\n<li><a href=\"http://dayigu.github.io/OrgModeAndLiterateProgramming.html\">org-mode, “文学编程” , 自动化报告</a></li>\n<li><a href=\"http://orgmode.org/org.html\">org-mode官方文档</a></li>\n</ul>\n</div>\n</div>\n\nLast Updated 2017-05-08 一 00:32.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.2.1 (<a href=\"http://orgmode.org\">Org</a> mode 9.0.5)\n"}
