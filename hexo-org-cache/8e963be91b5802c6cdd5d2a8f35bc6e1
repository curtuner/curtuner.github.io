{"md5":"4163da9e91e6d664df3eeb15eca4faa6","content":"\n\n\n<div id=\"outline-container-sec-1\" class=\"outline-2\">\n<h2 id=\"sec-1\"><span class=\"section-number-2\">1</span> 802.11基础要点</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n</div><div id=\"outline-container-sec-1-1\" class=\"outline-3\">\n<h3 id=\"sec-1-1\"><span class=\"section-number-3\">1.1</span> 无线电（radio）</h3>\n<div class=\"outline-text-3\" id=\"text-1-1\">\n</div><div id=\"outline-container-sec-1-1-1\" class=\"outline-4\">\n<h4 id=\"sec-1-1-1\"><span class=\"section-number-4\">1.1.1</span> 无线频谱</h4>\n<div class=\"outline-text-4\" id=\"text-1-1-1\">\n<p>\n无线设备被设定在某个频带上使用，每个频带有相应的带宽，较大的带宽。\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-1-2\" class=\"outline-3\">\n<h3 id=\"sec-1-2\"><span class=\"section-number-3\">1.2</span> 802.11x的字面含义</h3>\n<div class=\"outline-text-3\" id=\"text-1-2\">\n<p>\n802是IEEE组织的一个专门负责制定局域网标准的委员会，主要负责制定局域网/城域网的委员会。该委员会被分为多个工作组，802.11代表第11个工作组，负责制定MAC协议和物理层技术规范。进一步地，工作组内部还分成多个任务组，负责修改、更新标准的某个方面，使用一个英文字母来表示工作组。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-1-3\" class=\"outline-3\">\n<h3 id=\"sec-1-3\"><span class=\"section-number-3\">1.3</span> 802.11 版本</h3>\n<div class=\"outline-text-3\" id=\"text-1-3\">\n<p>\n有了以上的知识，我们很容易理解802.11版本的含义（这里只列出有价值）：\n</p>\n<ul class=\"org-ul\">\n<li>802.11：1997年最早的原始标准，在传输速率和距离上存在不足\n</li>\n<li>802.11a：1999年物理层的补充，可以在5G频段上使用\n</li>\n<li>802.11b：1999年物理层的补充，工作在2.4g上\n</li>\n<li>802.11g：2003年发布，802.11b的后继标准，是为了更高的速率而制定的标准，工作在2.4G上\n</li>\n<li>802.11n：新增MIMO的支持，提高了吞吐量\n</li>\n<li>802.11ac：802.11n的后继者\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-1-4\" class=\"outline-3\">\n<h3 id=\"sec-1-4\"><span class=\"section-number-3\">1.4</span> 802.11的内容</h3>\n<div class=\"outline-text-3\" id=\"text-1-4\">\n<p>\n802.11只涉及MAC层，以及物理层，对于软件开发者只要理解MAC层的内容和少量物理层的内容即可。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-1-5\" class=\"outline-3\">\n<h3 id=\"sec-1-5\"><span class=\"section-number-3\">1.5</span> 省电模式</h3>\n<div class=\"outline-text-3\" id=\"text-1-5\">\n<p>\n由于这些年电池相关的技术并没有太多突破，所以对于移动设备而言如何省电一直是一个重要的问题。802.11考虑了这一点，为STA定义了电源相关的状态，包含Active模式和PS（Power Save）模式。\n之前提过无线设备是半双工的，为了节省成本，对于radio的处理只有一个部件，叫收发器。\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-2\" class=\"outline-2\">\n<h2 id=\"sec-2\"><span class=\"section-number-2\">2</span> 802.11网络拓扑结构和服务类型</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n</div><div id=\"outline-container-sec-2-1\" class=\"outline-3\">\n<h3 id=\"sec-2-1\"><span class=\"section-number-3\">2.1</span> WLAN有三种网络拓扑结构</h3>\n<div class=\"outline-text-3\" id=\"text-2-1\">\n<ul class=\"org-ul\">\n<li>IBSS（Independent BSS）网络（或者ad-hoc网络）: 是一个点（STA）对点网络结构\n</li>\n<li>基础型BSS（Infrastructure Basic Service Set）网络：一般用BSS来表示，以一个AP为核心的网络\n</li>\n<li>ESS（Extent Service Set）网络：使用一个分布式系统（DS）来连接不同的BSS，消除STA之间传输距离受到物理设备的限制。一般的DS指的是有线网络。ESS在域BSS的关系中可以看到，BSS是更加基础的结构。\n</li>\n</ul>\n<p>\nIBSS和BSS是最基本的网络结构。但是这个网络结构覆盖范围有限，所以人们将几个BSS联合起来构建了覆盖范围更大的网络，就是ESS。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2-2\" class=\"outline-3\">\n<h3 id=\"sec-2-2\"><span class=\"section-number-3\">2.2</span> 网络的Identification</h3>\n<div class=\"outline-text-3\" id=\"text-2-2\">\n<ul class=\"org-ul\">\n<li>BSSID：Infrastructure BSS以AP为核心，而MAC地址对于设备是唯一的，所以直接使用MAC地址作为BSSID，IBSS也使用MAC地址，不过使用的是随机生成的，与设备的MAC地址无关\n</li>\n<li>SSID：WLAN的名字，一般是可读的，BSSID一般和SSID关联。\n</li>\n<li>ESSID：ESS包括了一个或多个BSS，要使一个ESS对用户看起来想一个BSS，而用户一般接触不到MAC地址，所以使用的SSID来作为ESSID。\n</li>\n</ul>\n<p>\n所以一般公共场所的WiFi都是ESS，我们使用的SSID介入ESSID，但实际移动的时候还是在不同的Infrastructure BSS切换，实际上BSSID在是会改变的。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-2-3\" class=\"outline-3\">\n<h3 id=\"sec-2-3\"><span class=\"section-number-3\">2.3</span> 802.11服务</h3>\n<div class=\"outline-text-3\" id=\"text-2-3\">\n<p>\n所谓服务，也可以理解为提供的功能。从模块考虑，802.11的服务分为两大类高：\n</p>\n<ol class=\"org-ol\">\n<li>SS(Station Service)：指STA的功能\n</li>\n<li>DSS（Disstribution System Service）：指DS的功能，一般认为DS是以太网\n</li>\n</ol>\n<p>\n而从功能考虑则存在，则有可以分成几类：\n</p>\n<ol class=\"org-ol\">\n<li>MAC层数据传输\n</li>\n<li>LAN口访问控制\n</li>\n<li>频谱管理\n</li>\n<li>QoS\n</li>\n<li>时间同步\n</li>\n<li>radio测量\n</li>\n</ol>\n<p>\n接下来从功能来分析\n</p>\n</div>\n<div id=\"outline-container-sec-2-3-1\" class=\"outline-4\">\n<h4 id=\"sec-2-3-1\"><span class=\"section-number-4\">2.3.1</span> MAC层数据传输</h4>\n<div class=\"outline-text-4\" id=\"text-2-3-1\">\n<ul class=\"org-ul\">\n<li>分布式服务\nSTA传送数据需要的服务，即便实在同一个AP下的两个STA也是\n</li>\n<li></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n\n<div id=\"outline-container-sec-3\" class=\"outline-2\">\n<h2 id=\"sec-3\"><span class=\"section-number-2\">3</span> CSMA/CA</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n</div><div id=\"outline-container-sec-3-1\" class=\"outline-3\">\n<h3 id=\"sec-3-1\"><span class=\"section-number-3\">3.1</span> 引言</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n<p>\n初始802.11有两种模式，一种是DCF模式，一种是PCF模式。DCF模式的核心机制是CSMA/CA机制。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-3-2\" class=\"outline-3\">\n<h3 id=\"sec-3-2\"><span class=\"section-number-3\">3.2</span> RTS/CTS模式</h3>\n<div class=\"outline-text-3\" id=\"text-3-2\">\n<p>\n隐藏终端问题（hidden terminal problem），所以需要一个AP来统一管理。于是引入了RTS/CTS模式，RTS和CTS帧都是广播的未加密，CTS（Clear To Send）中文也叫信道清除帧，一个基础BSS是以AP为核心的，所以从AP发出的CTS帧可以清理整个BSS。RTS和CTS的长度一般较小。可以\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-4\" class=\"outline-2\">\n<h2 id=\"sec-4\"><span class=\"section-number-2\">4</span> 管理操作</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n</div><div id=\"outline-container-sec-4-1\" class=\"outline-3\">\n<h3 id=\"sec-4-1\"><span class=\"section-number-3\">4.1</span> STA接入前的沟通</h3>\n<div class=\"outline-text-3\" id=\"text-4-1\">\n</div><div id=\"outline-container-sec-4-1-1\" class=\"outline-4\">\n<h4 id=\"sec-4-1-1\"><span class=\"section-number-4\">4.1.1</span> 主动扫描</h4>\n</div>\n<div id=\"outline-container-sec-4-1-2\" class=\"outline-4\">\n<h4 id=\"sec-4-1-2\"><span class=\"section-number-4\">4.1.2</span> 被动扫描</h4>\n<div class=\"outline-text-4\" id=\"text-4-1-2\">\n<p>\nSTA支持多个信道，而一个AP一般只在一个信道上发射信号，所以STA扫描时一般轮流在不同的频段上接收beacon帧\n</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-5\" class=\"outline-2\">\n<h2 id=\"sec-5\"><span class=\"section-number-2\">5</span> MAC帧</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\n如图，802.11帧的由三个基本域组成，MAC头部、数据域（Frame body）和帧校验序列（Frame Check Sequence）。\n<img src=\"./WiFi无线网络/MAC帧格式.png\" alt=\"MAC帧格式.png\">\n当然，不是所有帧都是这种格式，对于Qos数据帧和HT数据帧还要附加其他字段。可以看到有四个地址，很多帧并不包含所有地址，一般address1是接收STA的地址（receiver address），发送STA的地址（transmitteraddress）。严格讲地址和Sequence Control都不是必须的，没有数据的情况下连FCS都不是必要的。最重要的是Frame Control和Duration/ID的信息，\n</p>\n</div>\n<div id=\"outline-container-sec-5-1\" class=\"outline-3\">\n<h3 id=\"sec-5-1\"><span class=\"section-number-3\">5.1</span> 控制帧</h3>\n<div class=\"outline-text-3\" id=\"text-5-1\">\n<p>\n控制帧控制STA对于共享媒介的访问，\n</p>\n</div>\n\n<div id=\"outline-container-sec-5-1-1\" class=\"outline-4\">\n<h4 id=\"sec-5-1-1\"><span class=\"section-number-4\">5.1.1</span> Frame Control字段</h4>\n<div class=\"outline-text-4\" id=\"text-5-1-1\">\n<p>\nFrame Control占用两个字节，主要是元数据，该字段的信息量比较大，所以要付出比较多的精力来学习。\n</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-6\" class=\"outline-2\">\n<h2 id=\"sec-6\"><span class=\"section-number-2\">6</span> Linux WiFi编程API</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n</div><div id=\"outline-container-sec-6-1\" class=\"outline-3\">\n<h3 id=\"sec-6-1\"><span class=\"section-number-3\">6.1</span> 前言</h3>\n<div class=\"outline-text-3\" id=\"text-6-1\">\n<p>\n目前的无线网络设备编程的编程API，一套叫wex或wext（Wireless Extensions），另一套叫cfg80211和nl80211两套编程接口。前一套逐渐被淘汰了，后一套推荐使用。cfg80211用于驱动开发，nl80211 API供用户空间进程使用以操作利用cfg80211 API开发的无线网卡驱动。目前无线网卡分两种SoftMAC和fullMAC，只有SoftMAC可以使用cfg80211。本节使用Linux 4.11.5的源码作为分析的代码。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-6-2\" class=\"outline-3\">\n<h3 id=\"sec-6-2\"><span class=\"section-number-3\">6.2</span> wext的简单介绍</h3>\n<div class=\"outline-text-3\" id=\"text-6-2\">\n<p>\n所有用户空间的请求都统一包括在struct iwreq（interface wireless request）中，在Linux-4.11.5/include/uapi/linux/wireless.h中有查看该结构体的定义：\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\"> * The structure to exchange data for ioctl.</span><br><span class=\"line\"> * This structure is the same as 'struct ifreq', but (re)defined for</span><br><span class=\"line\"> * convenience...</span><br><span class=\"line\"> * Do I need to remind you about structure size (32 octets) ?</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">struct</span> iwreq {</span><br><span class=\"line\">\t<span class=\"keyword\">union</span></span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">char</span>       ifrn_name[IFNAMSIZ];    <span class=\"comment\">/* if name, e.g. \"eth0\" */</span></span><br><span class=\"line\">\t} ifr_ifrn;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/* Data part (defined just above) */</span></span><br><span class=\"line\">\t<span class=\"keyword\">union</span> iwreq_data   u; <span class=\"comment\">// 参数信息</span></span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n参数信息是一个联合体，这在对于C语言是一个常见的做法，但其实有更好的方案，可以在联合体上加个类型信息，不过也无所谓了。iwreq<sub>data的定义也在wireless</sub>.h中：\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* ------------------------ IOCTL REQUEST ------------------------ */</span></span><br><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\"> * This structure defines the payload of an ioctl, and is used</span><br><span class=\"line\"> * below.</span><br><span class=\"line\"> *</span><br><span class=\"line\"> * Note that this structure should fit on the memory footprint</span><br><span class=\"line\"> * of iwreq (which is the same as ifreq), which mean a max size of</span><br><span class=\"line\"> * 16 octets = 128 bits. Warning, pointers might be 64 bits wide...</span><br><span class=\"line\"> * You should check this when increasing the structures defined</span><br><span class=\"line\"> * above in this file...</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> iwreq_data {</span><br><span class=\"line\">\t<span class=\"comment\">/* Config - generic */</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span>               name[IFNAMSIZ];</span><br><span class=\"line\">\t<span class=\"comment\">/* Name : used to verify the presence of  wireless extensions.</span><br><span class=\"line\">\t * Name of the protocol/provider... */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_point    essid;          <span class=\"comment\">/* Extended network name */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    nwid;           <span class=\"comment\">/* network id (or domain - the cell) */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_freq     freq;           <span class=\"comment\">/* frequency or channel :</span><br><span class=\"line\">\t\t\t\t\t * 0-1000 = channel</span><br><span class=\"line\">\t\t\t\t\t * &gt; 1000 = frequency in Hz */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    sens;           <span class=\"comment\">/* signal level threshold */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    bitrate;        <span class=\"comment\">/* default bit rate */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    txpower;        <span class=\"comment\">/* default transmit power */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    rts;            <span class=\"comment\">/* RTS threshold threshold */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    frag;           <span class=\"comment\">/* Fragmentation threshold */</span></span><br><span class=\"line\">\t__u32              mode;           <span class=\"comment\">/* Operation mode */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    retry;          <span class=\"comment\">/* Retry limits &amp; lifetime */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_point    encoding;       <span class=\"comment\">/* Encoding stuff : tokens */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    power;          <span class=\"comment\">/* PM duration/timeout */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_quality qual;            <span class=\"comment\">/* Quality part of statistics */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> sockaddr    ap_addr;        <span class=\"comment\">/* Access point address */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> sockaddr    addr;           <span class=\"comment\">/* Destination address (hw/mac) */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_param    param;          <span class=\"comment\">/* Other small parameters */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_point    data;           <span class=\"comment\">/* Other large parameters */</span></span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n</div>\n<p>\n该联合体一般是16个字节，当然有些请求需要更多的字节，所以还要涉及专用的数据结构。如专门用于触发无线网卡发起扫描请求的数据结构（参数）iw<sub>scan</sub><sub>req（在wireless</sub>.中）：\n</p>\n<div class=\"org-src-container\">\n\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">struct</span> iw_scan_req {</span><br><span class=\"line\">\t__u8               scan_type; <span class=\"comment\">/* IW_SCAN_TYPE_{ACTIVE,PASSIVE} */</span></span><br><span class=\"line\">\t__u8               essid_len;</span><br><span class=\"line\">\t__u8               num_channels; <span class=\"comment\">/* num entries in channel_list;</span><br><span class=\"line\">\t\t\t\t       * 0 = scan all allowed channels */</span></span><br><span class=\"line\">\t__u8               flags; <span class=\"comment\">/* reserved as padding; use zero, this may</span><br><span class=\"line\">\t\t\t\t* be used in the future for adding flags</span><br><span class=\"line\">\t\t\t\t* to request different scan behavior */</span></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> sockaddr    bssid; <span class=\"comment\">/* ff:ff:ff:ff:ff:ff for broadcast BSSID or</span><br><span class=\"line\">\t\t\t\t* individual address of a specific BSS */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span><br><span class=\"line\">\t * Use this ESSID if IW_SCAN_THIS_ESSID flag is used instead of using</span><br><span class=\"line\">\t * the current ESSID. This allows scan requests for specific ESSID</span><br><span class=\"line\">\t * without having to change the current ESSID and potentially breaking</span><br><span class=\"line\">\t * the current association.</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t__u8               essid[IW_ESSID_MAX_SIZE];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/*</span><br><span class=\"line\">\t * Optional parameters for changing the default scanning behavior.</span><br><span class=\"line\">\t * These are based on the MLME-SCAN.request from IEEE Std 802.11.</span><br><span class=\"line\">\t * TU is 1.024 ms. If these are set to 0, driver is expected to use</span><br><span class=\"line\">\t * reasonable default values. min_channel_time defines the time that</span><br><span class=\"line\">\t * will be used to wait for the first reply on each channel. If no</span><br><span class=\"line\">\t * replies are received, next channel will be scanned after this. If</span><br><span class=\"line\">\t * replies are received, total time waited on the channel is defined by</span><br><span class=\"line\">\t * max_channel_time.</span><br><span class=\"line\">\t */</span></span><br><span class=\"line\">\t__u32              min_channel_time; <span class=\"comment\">/* in TU */</span></span><br><span class=\"line\">\t__u32              max_channel_time; <span class=\"comment\">/* in TU */</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">struct</span> iw_freq     channel_list[IW_MAX_FREQUENCIES];</span><br><span class=\"line\">};</span><br></pre></td></tr></table></figure>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-6-3\" class=\"outline-3\">\n<h3 id=\"sec-6-3\"><span class=\"section-number-3\">6.3</span> <span class=\"todo TODO\">TODO</span> nl80211</h3>\n<div class=\"outline-text-3\" id=\"text-6-3\">\n<p>\nnl80211基于netlink机制，netlink是Linux平台下一种基于socket的IPC通信机制，也是一种特殊的socket。domain参数是AF<sub>NETLINK，</sub>\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-7\" class=\"outline-2\">\n<h2 id=\"sec-7\"><span class=\"section-number-2\">7</span> wpa<sub>supplicant</sub></h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n<p>\nwpa<sub>supplicant是一个支持WEP、WPA和WPA2的跨平台WPA客户端，</sub>\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-8\" class=\"outline-2\">\n<h2 id=\"sec-8\"><span class=\"section-number-2\">8</span> WiFi P2P基础</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n</div><div id=\"outline-container-sec-8-1\" class=\"outline-3\">\n<h3 id=\"sec-8-1\"><span class=\"section-number-3\">8.1</span> 概述</h3>\n<div class=\"outline-text-3\" id=\"text-8-1\">\n<p>\n它是由WiFi联盟推出的另一项\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-sec-9\" class=\"outline-2\">\n<h2 id=\"sec-9\"><span class=\"section-number-2\">9</span> 零散</h2>\n<div class=\"outline-text-2\" id=\"text-9\">\n</div><div id=\"outline-container-sec-9-1\" class=\"outline-3\">\n<h3 id=\"sec-9-1\"><span class=\"section-number-3\">9.1</span> 802.11的五种地址</h3>\n<div class=\"outline-text-3\" id=\"text-9-1\">\n<ul class=\"org-ul\">\n<li>BSSID\n</li>\n<li>DA（Destination Address）\n</li>\n<li>SA（Source Address）\n</li>\n<li>TA（Transmitter Address）：将MAC数据包发送到无线介质中的STA地址\n</li>\n<li>RA（Receiver Address）：\n</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-sec-9-2\" class=\"outline-3\">\n<h3 id=\"sec-9-2\"><span class=\"section-number-3\">9.2</span> MAC地址的约定</h3>\n<div class=\"outline-text-3\" id=\"text-9-2\">\n<p>\nMAC占用6个字节，前3个字节是厂商的ID，后3个字节是网卡的唯一编号。第48位用于表示地址是组播地址还是单播地址，组播地址为1,单播地址则为0，第47位表示MAC地址是全球唯一还是本地唯一，称为G/L位。另外，由于字节序大小端的问题，我们看到的地址会有所不同，对于小端的机器，最右边是第48位，而对于大端的机器，最左边是第48位。\n</p>\n</div>\n</div>\n<div id=\"outline-container-sec-9-3\" class=\"outline-3\">\n<h3 id=\"sec-9-3\"><span class=\"section-number-3\">9.3</span> CSMA/CA运作模式</h3>\n<div class=\"outline-text-3\" id=\"text-9-3\">\n<p>\nCSMA/CA具体运作是由协调模式确定（coordination Function，CF），有四种不同的协调模式\n</p>\n<ol class=\"org-ol\">\n<li>DCF\n</li>\n<li>PCF\n</li>\n<li>HCF（Hybrid，混合型协调功能）\n</li>\n<li>MCF（Mesh CF）\n</li>\n</ol>\n</div>\n</div>\n<div id=\"outline-container-sec-9-4\" class=\"outline-3\">\n<h3 id=\"sec-9-4\"><span class=\"section-number-3\">9.4</span> </h3>\n</div>\n</div>\n<div id=\"outline-container-sec-10\" class=\"outline-2\">\n<h2 id=\"sec-10\"><span class=\"section-number-2\">10</span> 思考</h2>\n<div class=\"outline-text-2\" id=\"text-10\">\n<p>\n毫无疑问，协议栈每个层次的传输能力是一样的，关于元语的翻译。\n协议栈每一层提供的服务可以理解为为上一层提供的接口。这些接口既可以是内部调用也可以是外部调用的，\n802.11中只有数据帧才是上层数据的包装，\nMAC层会丢弃错误的数据包\n</p>\n</div>\n</div>\n\n<div id=\"outline-container-sec-11\" class=\"outline-2\">\n<h2 id=\"sec-11\"><span class=\"section-number-2\">11</span> 参考</h2>\n<div class=\"outline-text-2\" id=\"text-11\">\n<ul class=\"org-ul\">\n<li>深入理解android：WiFi模块 NFC和GPS卷\n</li>\n</ul>\n</div>\n</div>\n\nLast Updated 2017-06-21 三 10:19.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.3.1 (<a href=\"http://orgmode.org\">Org</a> mode 8.2.10)\n"}
