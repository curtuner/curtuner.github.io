{"md5":"a40cff1b3f6088212ddaa15447fe7bb7","content":"\n\n\n<div id=\"outline-container-org24868b6\" class=\"outline-2\">\n<h2 id=\"org24868b6\"><span class=\"section-number-2\">1</span> <span class=\"todo TODO\">TODO</span> 基本的硬件组成</h2>\n<div class=\"outline-text-2\" id=\"text-1\">\n<ul class=\"org-ul\">\n<li>CPU</li>\n<li>网卡芯片</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-org41e220e\" class=\"outline-2\">\n<h2 id=\"org41e220e\"><span class=\"section-number-2\">2</span> 内存技术设备mtd以及mtd命令</h2>\n<div class=\"outline-text-2\" id=\"text-2\">\n<p>\nmtd是是用于访问memory设备（ROM、flash）的Linux的子系统，mtd将文件系统与底层flash存储器进行了隔离。嵌入式设备一般使用mtd来管理flash空间。要注意的是mtd也指一个指令，用于操作该设备。\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgd87711c\" class=\"outline-2\">\n<h2 id=\"orgd87711c\"><span class=\"section-number-2\">3</span> openwrt</h2>\n<div class=\"outline-text-2\" id=\"text-3\">\n</div><div id=\"outline-container-org7b6d7e9\" class=\"outline-3\">\n<h3 id=\"org7b6d7e9\"><span class=\"section-number-3\">3.1</span> openwrt结构（非源码）</h3>\n<div class=\"outline-text-3\" id=\"text-3-1\">\n</div><div id=\"outline-container-org0924284\" class=\"outline-4\">\n<h4 id=\"org0924284\"><span class=\"section-number-4\">3.1.1</span> image(在flash中的内容)</h4>\n</div>\n<div id=\"outline-container-org877cfb5\" class=\"outline-4\">\n<h4 id=\"org877cfb5\"><span class=\"section-number-4\">3.1.2</span> 文件系统</h4>\n<div class=\"outline-text-4\" id=\"text-3-1-2\">\n<p>\nflash上一般有两种文件系统，squash文件系统和jffs2文件系统，前者是只读的后者是可写的，一般会把jffs2 mount到某个目录下。在这两种系统的基础上，实现了mini<sub>info文件系统</sub>，这个文件系统给出的抽象是有用户可以读写所有文件，本质上，在只读的情况下，用户使用squash，而在写的情况下用户把内容复制jffs2文件系统中，就可以了。\n</p>\n</div>\n<ol class=\"org-ol\"><li><a id=\"org6bdfe52\"></a><span class=\"todo TODO\">TODO</span> jffs文件系统<br></li>\n<li><a id=\"org82c396d\"></a>根文件系统<br><div class=\"outline-text-5\" id=\"text-3-1-2-2\">\n<p>\n本身就是一个文件系统，不是一个某种独立的文件系统。它的特殊之处在于，它是内核启动时所mount的第一个文件系统\n</p>\n</div></li>\n<li><a id=\"org8acdb5a\"></a>initrd<br><div class=\"outline-text-5\" id=\"text-3-1-2-3\">\n<p>\ninit RAMdisk是在系统引导过程中挂载临时根文件系统，用来支持两阶段的引导过程，initrd文件中包含了各种可执行程序和驱动程序，它们可以用来挂载实际的根文件系统，然后再将这个 initrd RAM磁盘卸载，并释放内存\n</p>\n</div></li></ol>\n</div>\n\n<div id=\"outline-container-org48a462d\" class=\"outline-4\">\n<h4 id=\"org48a462d\"><span class=\"section-number-4\">3.1.3</span> <span class=\"todo TODO\">TODO</span> 设备文件的处理</h4>\n<div class=\"outline-text-4\" id=\"text-3-1-3\">\n</div><ol class=\"org-ol\"><li><a id=\"org3109ea8\"></a>udev<br><div class=\"outline-text-5\" id=\"text-3-1-3-1\">\n<p>\nudev是用户空间的程序，和管理的是/dev，知道如何改变缺省配置。用于管理设备的程序\n</p>\n</div></li></ol>\n</div>\n<div id=\"outline-container-orga3587b4\" class=\"outline-4\">\n<h4 id=\"orga3587b4\"><span class=\"section-number-4\">3.1.4</span> 编译流程</h4>\n<div class=\"outline-text-4\" id=\"text-3-1-4\">\n</div><ol class=\"org-ol\"><li><a id=\"org01b6d9e\"></a>重要的目录<br></li>\n<li><a id=\"org6f9ad51\"></a>firmware<br><div class=\"outline-text-5\" id=\"text-3-1-4-2\">\n<p>\n由kernel和rootfs组成，然后合并为bin文件。Image/BuildKernel。默认是由uimage和root.squashfs来生成。\n在target/linux/ar7xxx/image/Makefile中$(eval $(call BuildImage))\nBuildImage定义在include/image.mk中， Image/BuildKernel处理vmlinux，Image/mkfs/squashfs生成rootfs，并与vmlinux合并为.bin\n</p>\n</div></li></ol>\n</div>\n<div id=\"outline-container-orga126352\" class=\"outline-4\">\n<h4 id=\"orga126352\"><span class=\"section-number-4\">3.1.5</span> flash layout</h4>\n<div class=\"outline-text-4\" id=\"text-3-1-5\">\n<p>\nopenwrt典型的有两种布局方式，一种是KR（kernel在前，rootfs在后），另一种是RK（rootfs在前，kernel在后）。 取决于u-boot默认的boot地址，也可以在先进入uboot来手动修改启动地址，使得kernel能被正确加载。一般的布局先是uboot和uboot-env，之后是firmware(KR或者RK)，再之后是art以及其他的。\n固件如何布局其实无所谓\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-org1253089\" class=\"outline-3\">\n<h3 id=\"org1253089\"><span class=\"section-number-3\">3.2</span> openwrt源码结构分析</h3>\n</div>\n</div>\n\n<div id=\"outline-container-org4ca7a55\" class=\"outline-2\">\n<h2 id=\"org4ca7a55\"><span class=\"section-number-2\">4</span> MIPS处理器</h2>\n<div class=\"outline-text-2\" id=\"text-4\">\n</div><div id=\"outline-container-org42127c3\" class=\"outline-3\">\n<h3 id=\"org42127c3\"><span class=\"section-number-3\">4.1</span> 地址空间映射</h3>\n<div class=\"outline-text-3\" id=\"text-4-1\">\n<p>\nMIPS的内存空间映射很重要，相关信息可以datasheet中得到，尤其特别的寄存器地址。MIPS处理器的地址空间一般分为（Kuseg, Kseg0, Kseg1, Kseg2）。Kuseg是最前面的用户地址空间占2G，一般要在MMU被设置完之后才能使用。Kseg0占之后的的地址被映射到物理地址的低512M，这段内存也称为unmapped cached空间。Kseg1与Kseg0是映射到同一段内存空间的，只不过它不经过告诉缓存，所以它是稳定的。Kseg2是给内核态使用的。MIPS CPU运行时有三种状态：用户模式（User Mode）；核心模式（Kernel Mode）；管理模式（Supervisor Mode）。其中管理模式不常用。用户模式下，CPU只能访问KUSeg；当需要访问KSeg0、Kseg1和Kseg2时，必须使用核心模式或管理模 式。\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-org1101994\" class=\"outline-2\">\n<h2 id=\"org1101994\"><span class=\"section-number-2\">5</span> 串口通信（Serial Communications）</h2>\n<div class=\"outline-text-2\" id=\"text-5\">\n<p>\n串口按位（bit）发送和接收字节，可以在使用一根线发送数据的同时用另一根线接收数据。\n</p>\n</div>\n</div>\n<div id=\"outline-container-org9e7b8ec\" class=\"outline-2\">\n<h2 id=\"org9e7b8ec\"><span class=\"section-number-2\">6</span> switch芯片</h2>\n<div class=\"outline-text-2\" id=\"text-6\">\n<p>\n交换机芯片有多种，用于满足不同的需求，我平常接触最多的是QCA8337，所以以它为实例。\n</p>\n</div>\n<div id=\"outline-container-org11a07dd\" class=\"outline-3\">\n<h3 id=\"org11a07dd\"><span class=\"section-number-3\">6.1</span> QCA8337</h3>\n<div class=\"outline-text-3\" id=\"text-6-1\">\n<p>\n每个端口是否占一个MAC呢\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-orgda73970\" class=\"outline-2\">\n<h2 id=\"orgda73970\"><span class=\"section-number-2\">7</span> 零散</h2>\n<div class=\"outline-text-2\" id=\"text-7\">\n</div><div id=\"outline-container-org84f7c28\" class=\"outline-3\">\n<h3 id=\"org84f7c28\"><span class=\"section-number-3\">7.1</span> ramdisk</h3>\n<div class=\"outline-text-3\" id=\"text-7-1\">\n<p>\n通过软件将一部分内存（RAM）模拟为硬盘来使用的一种技术\n</p>\n</div>\n</div>\n<div id=\"outline-container-org81ee6c0\" class=\"outline-3\">\n<h3 id=\"org81ee6c0\"><span class=\"section-number-3\">7.2</span> 操作系统的自举</h3>\n<div class=\"outline-text-3\" id=\"text-7-2\">\n<p>\n很大一部分的内容在进行这个过程\n</p>\n</div>\n</div>\n<div id=\"outline-container-orga62d62b\" class=\"outline-3\">\n<h3 id=\"orga62d62b\"><span class=\"section-number-3\">7.3</span> busybox</h3>\n<div class=\"outline-text-3\" id=\"text-7-3\">\n<p>\nBusyBox 是很多标准 Linux® 工具的一个单个可执行实现。BusyBox 包含了一些简单的工具，例如 cat 和 echo，还包含了一些更大、更复杂的工具，例如 grep、find、mount 以及 telnet（不过它的选项比传统的版本要少）.一个程序使用命令\n</p>\n</div>\n</div>\n<div id=\"outline-container-org4b38d1e\" class=\"outline-3\">\n<h3 id=\"org4b38d1e\"><span class=\"section-number-3\">7.4</span> 设备号</h3>\n<div class=\"outline-text-3\" id=\"text-7-4\">\n<p>\n一个字符设备或者块设备都有一个主设备号和次设备号。主设备号和次设备号统称为设备号主，设备号用来表示一个特定的驱动程序。次设备号用来表示使用该驱动程序的各设备\n</p>\n</div>\n</div>\n<div id=\"outline-container-org660c091\" class=\"outline-3\">\n<h3 id=\"org660c091\"><span class=\"section-number-3\">7.5</span> 固件备份</h3>\n</div>\n</div>\n<div id=\"outline-container-orgfb0f29f\" class=\"outline-2\">\n<h2 id=\"orgfb0f29f\"><span class=\"section-number-2\">8</span> FAQ</h2>\n<div class=\"outline-text-2\" id=\"text-8\">\n</div><div id=\"outline-container-orgba5cac2\" class=\"outline-3\">\n<h3 id=\"orgba5cac2\"><span class=\"section-number-3\">8.1</span> 一般无线设备开发人员说的方案指什么？</h3>\n<div class=\"outline-text-3\" id=\"text-8-1\">\n<p>\n值得是芯片方案，wifi芯片一般集成在cpu中，所以很多时候是值wifi芯片方案\n</p>\n</div>\n</div>\n</div>\n<div id=\"outline-container-org514705a\" class=\"outline-2\">\n<h2 id=\"org514705a\"><span class=\"section-number-2\">9</span> 有用的问题</h2>\n</div>\n<div id=\"outline-container-org546f25a\" class=\"outline-2\">\n<h2 id=\"org546f25a\"><span class=\"section-number-2\">10</span> <span class=\"todo TODO\">TODO</span> <code>[0%]</code></h2>\n<div class=\"outline-text-2\" id=\"text-10\">\n<ul class=\"org-ul\">\n<li class=\"off\"><code>[&#xa0;]</code> 完成日志文件系统</li>\n</ul>\n</div>\n</div>\n<div id=\"outline-container-org15181c2\" class=\"outline-2\">\n<h2 id=\"org15181c2\"><span class=\"section-number-2\">11</span> <span class=\"todo TODO\">TODO</span> 零散问题</h2>\n<div class=\"outline-text-2\" id=\"text-11\">\n</div><div id=\"outline-container-orgd82ca0d\" class=\"outline-3\">\n<h3 id=\"orgd82ca0d\"><span class=\"section-number-3\">11.1</span> <span class=\"todo TODO\">TODO</span> 备份固件的方法</h3>\n<div class=\"outline-text-3\" id=\"text-11-1\">\n<ol class=\"org-ol\">\n<li>将flash拆开，使用编程器读出</li>\n</ol>\n</div>\n</div>\n<div id=\"outline-container-org23050fa\" class=\"outline-3\">\n<h3 id=\"org23050fa\"><span class=\"section-number-3\">11.2</span> <span class=\"todo TODO\">TODO</span> 编程器的使用</h3>\n<div class=\"outline-text-3\" id=\"text-11-2\">\n<p>\n编程器主要修改，编程器通常与计算机连接\n</p>\n</div>\n</div>\n<div id=\"outline-container-org6b2b053\" class=\"outline-3\">\n<h3 id=\"org6b2b053\"><span class=\"section-number-3\">11.3</span> <span class=\"todo TODO\">TODO</span> FAQ</h3>\n<div class=\"outline-text-3\" id=\"text-11-3\">\n</div><div id=\"outline-container-org41e65f0\" class=\"outline-4\">\n<h4 id=\"org41e65f0\"><span class=\"section-number-4\">11.3.1</span> 什么是SoC？</h4>\n<div class=\"outline-text-4\" id=\"text-11-3-1\">\n<p>\nSystem on Chip(片上系统)，在单个芯片上集成一个完整的系统，\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgfaa0c5c\" class=\"outline-4\">\n<h4 id=\"orgfaa0c5c\"><span class=\"section-number-4\">11.3.2</span> 系统不是指操作系统吗？</h4>\n<div class=\"outline-text-4\" id=\"text-11-3-2\">\n<p>\n在嵌入式领域不通用，系统指的是包括CPU，存储器和其他组件的组合。操作系统视为虚拟机比较合适\n</p>\n</div>\n</div>\n<div id=\"outline-container-orgdd40cbf\" class=\"outline-4\">\n<h4 id=\"orgdd40cbf\"><span class=\"section-number-4\">11.3.3</span> firmware中的ART是什么？</h4>\n<div class=\"outline-text-4\" id=\"text-11-3-3\">\n<p>\nAtheros Radio Test/Atheros电波测试 - 它包含MAC地址和无线系统的校准信息(EEPROM). 如果该部分的信息丢失或损坏,ath9k (无线驱动程序) 就彻底罢工了\n</p>\n</div>\n</div>\n</div>\n</div>\n<div id=\"outline-container-orgcba0b3d\" class=\"outline-2\">\n<h2 id=\"orgcba0b3d\"><span class=\"section-number-2\">12</span> 参考文献</h2>\n<div class=\"outline-text-2\" id=\"text-12\">\n<ul class=\"org-ul\">\n<li><a href=\"https://wiki.openwrt.org/zh-cn/doc/techref/flash.layout\">Flash Layout/Flash 布局</a></li>\n<li><a href=\"http://baike.baidu.com/item/%E7%BC%96%E7%A8%8B%E5%99%A8\">编程器</a></li>\n<li><a href=\"http://blog.chinaunix.net/uid-26598889-id-3062943.html\">openwrt文件系统加载分析</a></li>\n<li><a href=\"https://www.ibm.com/developerworks/cn/linux/1306_qinzl_squashfs/\">基于 SquashFS 构建 Linux 可读写文件系统</a></li>\n<li><a href=\"http://baike.baidu.com/link?url=mc0KzaSaMJrjuFs3R1hzwdQZKix4wqahLc90DkUcVfUP-jZaQ2pk3crJ_RIKq23kJuTgvXdZTt8a-ajkbJkhCI7KlcdbOweaHvE6dWGrl_UlohHMD2ZsadRqIGNY6MQcxVj9nrqqyYqV_b6B8bCNGnyHW43dKfxK2ISlsmRrDd9ZYRKzCkYaBFb7FiGYhFhb\">ramdisk</a></li>\n<li><a href=\"http://baike.baidu.com/item/initrd?sefr=cr\">initrd</a></li>\n<li><a href=\"https://www.ibm.com/developerworks/cn/linux/l-busybox/index.html\">BusyBox 简化嵌入式 Linux 系统</a></li>\n<li><a href=\"http://www.voidcn.com/blog/yubing_615/article/p-6089704.html\">openwrt flash layout</a></li>\n<li><a href=\"https://wiki.microduino.cn/index.php?title=%E7%AC%AC%E4%B8%80%E8%AF%BE--OpenWRT_uboot%E4%BB%8B%E7%BB%8D&amp;variant=zh\">地址空间映射</a></li>\n</ul>\n</div>\n</div>\n\nLast Updated 2017-04-22 六 17:49.<br>Render by <a href=\"https://github.com/CodeFalling/hexo-renderer-org\">hexo-renderer-org</a> with <a href=\"http://www.gnu.org/software/emacs/\">Emacs</a> 25.2.1 (<a href=\"http://orgmode.org\">Org</a> mode 9.0.5)\n"}
