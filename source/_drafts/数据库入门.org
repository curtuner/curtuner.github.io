#+TITLE: 数据库入门
#+DATE: 2017-12-25
#+LAYOUT: post
#+TAGS: Database
#+CATEGORIES: Database

* 前言
  一般我们说的学习数据库，指的是学习整个数据库系统。数据库系统的全名叫数据库管理系统（DataBase-Mangement System, DBMS），包括一个 *相互关联* 的数据的集合和一组用以访问这些数据的程序组成。数据的集合称为数据库。
* 数据库的模式
  数据库模式和数据库实例，前者是数据库的逻辑设计，后者是给定时刻数据库中数据的一个快照。
* 数据库对比
  目前常用的关系式数据库包括mysql和PostgreSQL，而key-value数据库则包括redis和leveldb。leveldb和redis区别比较大，leveldb就是一个单机数据库，不能远程访问，当然可以自己写一个服务器
* 数据模型
  数据库
* 索引
  *索引的思想是保存一些额外的元数据作为路标，帮助你找到想要的数据。*
  索引是从主数据衍生的附加（additional）结构。许多数据库允许添加与删除索引，这不会影响数据的内容，它只影响查询的性能。索引会影响数据库写入的速度，所以默认情况下不会索引所有内容。
* 日志键值模型
  bitcask是一种日志键值模型，所谓日志型，指它不支持随机写入，而是像日志一样支持追加操作。追加的效率会比较高。磁盘的hash映射很难表现优秀，如果hash映射不能完全存储在内存中，那么就不适合使用这个模型。
  范围查找也很麻烦。
* 事务处理
  在这个领域有两大主流学派的存储引擎：
** 日志结构学派
   只允许附加到文件或者删除过时的文件，但不会更新已经写入的记录。
** 就地更新学派
   将磁盘视为一组可以覆盖的固定大小的页面
* SSTable（排序字符串表）
  
* MySQL简单使用
  这里只是简单记录一下MySQL如何使用，毕竟初步配置很少会反复接触。MySQL也是服务器和客户端的交互方式。
** 基本使用
*** 连接和断开服务器
    先连接MySQL服务器，
    #+BEGIN_SRC sh
    mysql -u curt -p
    #+END_SRC
    之后就会进入交互界面了，SQL不会区分大小写，个人还是喜欢小写。
    断开服务器的指令是输入 quit或者\q就可以了。
*** 输入查询
    一个命令通常是由一个SQL语句构成和分号组成，每条指令会被客户端发送给服务器并显示结果，指令会被显示结果。MySQL的字符串是使用‘或者"围起来的。
*** 
* 要点
** 为什么大部分网络服务都需要一个数据库在后台支撑整个系统？
   大部分服务器的运行周期都比较短，而面对数据量是比较大的，有时甚至超过内存，数据量超过内存的时候，需要对算法进行精心的设计。这是一个很复杂的话题，

* 参考
  - [[https://dev.mysql.com/doc/refman/8.0/en/tutorial.html][MySQL官方文档]]
  - [[https://blog.codingnow.com/2014/03/mmzb_db_2.html][谈谈陌陌争霸在数据库方面踩过的坑(排行榜篇)]]


