#+TITLE: mysql入门
#+DATE: 2018-03-26
#+LAYOUT: post
#+TAGS: mysql
#+CATEGORIES: mysql

* 前言
  到目前位置MySQL的版本是5，SQL涉及到的数据类型中，最复杂的要数字符串，本质上严格来说，数字属于某种特别的字符串，相比字符串的一大优点是数字有特定的顺序和特定的运算方式，而字符串则是限制少的多，现实中各种用途都有。所以我们需要各种表示方式来完成对于各种结构的描述，这就是编译，好在常用的结构不多。所以也就那么几种常用的算法。比较经典而简单是是表示字符集的算法，像自动机之类的。
* mysql工具
  - 命令行：用于快速测试和执行脚本，各个平台默认安装
  - MySQL Administrator：一个图形交互客户端，可选
  - MySQL Query Brower：一个图形交互客户端，可选
* MySQL的安全机制
  除了root用户，MySQL的用户都有权限的控制。
  数据库容易发生误操作，一旦进行的错误的操作就没法撤销了。
* SQL语义解析
  一旦通过use选择了一个数据库，就会拥有多个表。所以一般的SQL语句都需要有一个参数来选定表。
  order by位于where 之后，这里从语义上可以理解，后者是对于空间的映射和收缩，前者是对于元素的派布局。前者对于一个无序集合的操作，后者对于一个有序集合。
  有空值比较麻烦，需要扩展每个维度的空间，不过可以接受。
  where是一个过滤器，这些过滤器可以用逻辑运算符号来链接，通过两个where子句可以模拟between这个操作
* 基本操作
** 操作数据库
   use：选择数据库
** 插入数据
   数据库的表定义，定义了实例空间，数据库负责插入实例。insert可以插入一个或者多个，和select配合使用可以完成数据库的迁移。
** 更新行
   这里的语义就是，样例空间中的样例是有状态的，默认的语义其实是更新多个行，算是空间中的子空间的变化。如果中间发生错误。数据库的表可以回复以前的样子，也可以继续执行，不过要显示指定。
** 删除数据
   从表中删除特定的行，delete在没有设定where语句的情况下，删除的是所有的行。但是如果要删除所有行，不必要使用这种方法。可以使用truncate table来完成。
** 事务处理
   MySQL有多种数据库引擎，所以可以
** IN和括号
   这个特殊的过滤器，之后跟的是一个值清单，而不是一个区间。
** 通配符
   SQL的通配符和一般shell的通配符不同，这个需要额外学习。通配符是一个开销比较大的操作，尤其是把通配符放在开头的情况下。
** 计算字段
   计算字段对于数据库服务器来说是没有实际的存储空间的，但对于客户端来说是每种区别的。如果要返回用户一个有名字的列，可以使用别名。方便应用程序使用计算字段。
** SQL函数
   SQL的处理函数可移植性不大，不同的DBMS都会支持不同的指令
** 全文本检索
   innodB不支持全文本检索，需要使用MyISAM，其算法比较特别。
** 视图
* 数据库的性能问题
  保证每个表都有逐渐
  in 操作比一般的OR操作的速度更快。
** TODO 问题 [%]
   - [ ] 
* 零散
  - 程序员习惯对SQL关键值使用大写字母，对于表的列名之类的其他文字使用小写字母，方便区分。
  - truncate table和delete的区别，前者是删除了一个table，之后开了一个同名的table。
  - 子句的含义可以对于子空间的内容进行整合，使用子句的次序不对会产生一些不好的影响。
  - MySQL不区分大小写，
  - 不等于的符号有两个，<>和!=
  - NULL是一个特殊的值，独立于空间的一个值，所以检索的时候对于各种操作都是无效的，空间中这些实例介于存在和不存在之间。
  - 仔细一项通配符就是自动机中的星号。
  - like和regexp的区别在于like匹配整个字符串。而regexp匹配的是子串。
