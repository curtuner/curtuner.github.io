#+TITLE: Angular2记录
#+DATE: 2018-05-04
#+LAYOUT: post
#+TAGS: JavaScript
#+CATEGORIES: JavaScript

* 前言
  Angular算是一个比较全面的开发框架，同时这个框架的很新，包括了很多新的东西。相比之下，如何组织一个项目对于我来说要重要得多。Angular为了完成一个单页面应用
* 概念
** 基础概念
*** Angular组件
    组件是Angular的基本构造块。它在屏幕上显示数据，监听用户输入，根据输入执行相应的动作。一开始接触到的组件是AppComponent。一个组件一般包括三个实现文件：
    1) 组件的类代码
    2) 组件的模块，用HTML编写
    3) 组件的私有CSS样式

    为了添加新的功能一般要添加新的组件。
*** AppModule
    Angular 需要知道如何把应用程序的各个部分组合到一起，以及该应用需要哪些其它文件和库。 这些信息被称为元数据
*** 管道
    用于过滤数据

*** 双向数据绑定
*** TODO template标签
    结构指令像ngIf使用HTML template标签
*** 服务
    Angular把数据访问的职责交给服务，一个服务可以在任意地方获取数据：Web服务器、本地存储或者一个模拟的数据源
** 项目组织逻辑
   一个框架的特点就是可以满足各种需求，最基本的是可以满足各种不相干的需求。所以一开始要考察其对于不相干的应用的隔离能力。Angular的使用组件来完成隔离。之后就是不断向下细化，增加新层的过程了。Angular的组件接近其他语言中包的概念。在组件层面上要考虑的问题包括：
   - 组件联系的建立方式
   
   Angular的顶级类是AppModule，
* TypeScript基础
  TypeScript解决了很多JavaScript的痛点，当然大部分是ES6解决的，但是由于个人比较懒，就跳过ES6直接学习TypeScript了。当然浏览器不能直接运行代码
** 新关键字
*** export
    这里的export类似于C语言的extern用于暴露符号给其他模块。这个关键字和import对应，主要export的符号才可以使用import导入。
* 部署
  调试的时候可以使用 ~ng serve~ 来打开这个服务，而实际部署的时候显然不合适，可以使用 ~ng build~ 来生成实际的资源文件部署到服务器上。为了方便期间可以修改项目根目录下 angular-cli.json 文件：
  #+BEGIN_SRC sh
  "outDir": "./location/toYour/dist"
  #+END_SRC
  直接部署到自己的服务器的目录中。
* 零散
  - 大多数应用都会然外观保持一致，所以出现了css文件把全应用级别的样式放了进去。
  - 一个项目一般代码量会不断增大，所以最重要的是考虑可扩展性，这个至少需要扩展的经验才可以。

