#+TITLE: Angular2记录
#+DATE: 2018-05-04
#+LAYOUT: post
#+TAGS: JavaScript
#+CATEGORIES: JavaScript

* 前言
  Angular算是一个比较全面的开发框架，同时这个框架的很新，包括了很多新的东西。相比之下，如何组织一个项目对于我来说要重要得多。Angular 是一个用 HTML 和 TypeScript 构建客户端应用的平台与框架。它将核心功能和可选功能作为一组 TypeScript 库进行实现，你可以把它们导入你的应用中。
* 概念
** 基础概念
*** Angular组件（Component）
    组件是Angular的基本构造块。Angular应用接收用户指令、加工处理后输出相应视图的过程中，组件始终处于这个交互的出入口。每个Angular应用都至少有一个组件，称为根组件。组件的组成部分包括模板和组件类（也就是说组件和模板虽然是两大Angular基础概念，但并不是平行的），组件类维护组件的数据模型和功能逻辑，而组件模板提供了组件视图。一个Angular应用一般由大大小小松耦合的组件构成，组件的组织方式是树形的，逻辑上和GUI相似。
    高于组件的概念叫做路由，路由系统控制组件的创建和销毁。一开始接触到的组件是AppComponent。一个组件一般包括三个实现文件：
    1) 组件的类代码
    2) 组件的模块，用HTML编写
    3) 组件的私有CSS样式

    为了添加新的功能一般要添加新的组件。
*** 模板（module）
    模板基于HTML，传统的Web框架也有模板的概念，两者基本差不多，语法上也有很多相同的地方。数据绑定是模板的基本功能，主要包括：
    1) 插值
    2) 属性绑定
    3) 事件绑定
     
    上面的数据绑定都是单向的，
*** AppModule
    Angular 需要知道如何把应用程序的各个部分组合到一起，以及该应用需要哪些其它文件和库。 这些信息被称为元数据
    
*** 管道
    用于过滤数据

*** 双向数据绑定
*** TODO template标签
    结构指令像ngIf使用HTML template标签
*** 服务
    Angular把数据访问的职责交给服务，一个服务可以在任意地方获取数据：Web服务器、本地存储或者一个模拟的数据源
** 应用模块
   Angular的模块化系统称为NgModule，这里的模块和语言级别的模块是不同的，类似于Django中一个应用的概念。
   Angular应用主要是6个组成部分，Angular组织应用的方式就是模块机制，有点类似于Django，基于功能来划分模块。Angular的模块种类包括：
   1) 根模块
   2) 特征模块（Feature Module）
   3) 共享模块
   4) 核心模块
** NgModule和组件的关系
   NgModule为组件提供编译上下文，根模块会有根组件，在引导期间创建，但是任何模块都能包含任意数量的其他组件，一个NgModule可以有多个组件
** 项目组织逻辑
   一个框架的特点就是可以满足各种需求，最基本的是可以满足各种不相干的需求。所以一开始要考察其对于不相干的应用的隔离能力。Angular的使用组件来完成隔离。之后就是不断向下细化，增加新层的过程了。Angular的组件接近其他语言中包的概念。在组件层面上要考虑的问题包括：
   - 组件联系的建立方式
   
   Angular的顶级类是AppModule，
* TypeScript基础
  TypeScript解决了很多JavaScript的痛点，当然大部分是ES6解决的，但是由于个人比较懒，就跳过ES6直接学习TypeScript了。当然浏览器不能直接运行代码
** 新关键字
*** export
    这里的export类似于C语言的extern用于暴露符号给其他模块。这个关键字和import对应，主要export的符号才可以使用import导入。
* TODO 问题
** TODO 组件是一种抽象的模块，那么提供了多少相互依赖的方式呢？
* 零散
  - 大多数应用都会然外观保持一致，所以出现了css文件把全应用级别的样式放了进去。
  - 一个项目一般代码量会不断增大，所以最重要的是考虑可扩展性，这个至少需要扩展的经验才可以。

