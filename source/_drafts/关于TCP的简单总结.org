#+TITLE: 关于TCP的简单总结
#+DATE: 2018-03-29
#+LAYOUT: post
#+TAGS: TCP, Network
#+CATEGORIES: Network

* 前言
  讲到TCP一般先讲连接的建立和断开的过程，之后就是传输数据的内容，其中传输数据的规范才是TCP的重点，虽然一般讲到TCP大家似乎比较关注TCP的连接建立和断开的部分。
  一般可以认为状态转移的完成其实需要定时器和发出报文的行为来出发。当然这里指的是建立连接和断开的过程。
* TCP滑动窗口
  TCP滑动窗口，TCP报文总有一个滑动窗口的字段，占2个字节，所以一个额滑动窗口的最大值是65536（？）。这个机制有两个状态，可以传输和停止传输这两种状态。所以有两个状态转移。从可以传输的状态到不可传输的状态，以及反过来。
  第一个问题，何时停止传输，很简单，只要对端发送过来的滑动窗口是0的时候，就停止。
  第二个问题，何时停止传输，很简单，window。
* TCP重传
  TCP的重传需要设置一个定时器超过限定的时间没有得到ACK回应就会重发。定时器的时间如何设置就是这个机制的重点，一般把这个事件称为RTO（Retransmission Timeout）。这个时间应该由发送和得到ACK时间来计算。
* TCP拥塞控制
  先考虑的问题是什么是TCP的流量如何提高，一般TCP是发送一个包之后等待下一个包才能继续发送的，在这种情况下，流量几乎是固定的，所以为了提高效率，会一次多发送几个包，等待多个响应就可以了，保证不超过滑动窗口就可以了。一次能连续发送几个报文取决于cwnd，所以控制流量的算法关键在于控制cwnd的值。
* 要点
  - 执行主动关闭的一端。
  - TCP报文默认会占用40个字节，有几个字段无论如何都会被使用的，所以用来作为同步的一个标志也没什么不可以的，也可以降低代码的复杂度，毕竟只有一种情况。
  - 所有的ACK报文的确认号都是为了指明接受缓冲区的状态。比如一开始回应SYN，代表的是SYN已经收到，接受缓冲区已经初始化完成了。
  - 由于TCP缓存一般是先接受一定量的数据再一次性发给相应进程，一旦收到PSH的数据包，就会把已经组合完成的数据发送相应进程。
  - win和ack标志是指名本地缓冲区状态的一个主要信息，建立接受缓冲区的时候，之所以每次都要进行这个处理。代表两个控制，序号空间和缓冲区剩余大小。
  - 序号空间是这个字节流协议的根本，根据序号空间才可以重组乱序接收的数据。
  - 滑动窗口接受缓冲区大小不是对应的，但是有关系。
* 问题
  - [ ] 发送缓冲区和接受缓冲区的大小区别。
  - [ ] 发送缓冲区大小是否在TCP协议协商的过程中。
  - [ ] 窗口空闲之后，是接收端主动发送传令在更新报文，发送端主动发送探测报文。
