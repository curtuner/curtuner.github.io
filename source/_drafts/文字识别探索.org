#+TITLE: 文字识别探索
#+DATE: 2018-05-08
#+LAYOUT: post
#+TAGS: OCR
#+CATEGORIES: OCR

* 前言
  OCR是一个多学科交叉领域，涉及到计算机视觉（图像处理）、模式识别、机器学习和神经网络等方面知识。
  当前文字识别面临的困难：
  1) 开源的文字识别库，中文识别率都不是很让人满意
  2) 完整的问题识别
  
  对于RDP文字识别的稍微能取巧的地方：
  1) RDP协议本身支持传输字模（Glyph）数据，字模的识别率非常高，一般开源的OCR库就能提供不错的效果。也就是有部分数据可以精确识别。
  2) 多数文字都比较规则，不用处理手写的字体或者不同角度的处理，预处理相对简单。

  对于实际需求来说，文字识别只是其中一个部分。
* 基本概念
  OCR主要分成了两个部分：
  1) 文字提取
  2) 文字识别
  
  这两部分分别属于不同的领域，前者是图像处理，后者是文字识别。
* 文字提取
  对于远程桌面数据，几个特点是：
  1) 字体基本是印刷字体
  2) RDP协议能提取文字
* 当前文字识别软件面临的问题
  目前大多数都是文字识别，都是识别的RDP协议中传输的字模（Glyph），对于没能称为字模的程序无法识别。至于文字识别会呈现为字模（Glyph），一般取决于软件的实现。比如，打开包含文字的图片，就不会传输字模，这就造成了一个问题，如果不独立分析字模，一般字模是相对重要的数据，可以输出字模的程序包括：
  - Windows各种自带的工具软件（类似cmd，powershell）
  总之借助字模识别可以完成大部分RDP指令的审计。但是模糊识别就比较可惜了。
** 字模和图像文字识别
   RDP对此其实区分得比较好了，所以可以通过预处理来完成这两类字体的区分。
* 文字识别工具
  效果比较好文字识别工具本身属于比较容易盈利，所以大多不会开源。文字识别涉及的工具大体分成两种：
  1) 预处理工具 
  2) 识别工具
** Tesseract-ocr
   Tesseract-ocr提供了C语言和Python的接口，使用Python接口自然是最方便的。
* 存储文件格式
  文件主要存储两种信息，提取出的文字和时间，方便起见由于Guacmole协议的历史文件是每隔200ms打一个时间戳，比较齐整。文件方便检索。设计的思路可以很简单。最简单的做法是对照Guacamole历史文件在每个时间戳之间记录文件的文件的格式。
  以一般的架构来说，存储文件格式属于比较底层的东西，但是一旦涉及到检索的。那么和文件格式就比较靠近了。
  目前就是先借鉴其他软件来完成原型。
  目前像Guacmole是直接使用
  
* 具体嵌入Guacamole的方法
  Guacamole使用Guacamole协议来记录相应的历史，关系数据库可能不是很合适。涉及到文字的部分。RDP的glyph完全可以作为嵌入的文字来使用。这部分文字是最简单的，所以可以直接增加Guacamole的文字处理部分。然后直接在前端显示。那么这一部分就可以完成了。之后就是不能使用glyph传输的问题，这是最大的难点，一般情况下只能根据需要添加到历史文件中。之后逐渐完成这种处理。按照这种逻辑，VNC之后也可以逐步添加。测试起来也算方便。也可以逐步增加完成。
  下一个问题就是如何完成检索的支持，至于根据已有的元数据检索什么的到是好实现。根据相应单纯文字进行识别就比较麻烦了，这个需要对完整的数据进行分析，最简单的是直接遍历所有识别出来的文字，当时这样随着数据量的增加越发不显示。所以大体上需要某种方便检索的数据结构，比如前缀树什么的。高效的检索方式本身是一个大的主题。
* 文本检索技术
  要针对特定内容进行检索的时候，不可能每次都遍历一次所有的文件，就像source insight一样，一般都是先根据所有文件建立索引，之后才能高效检索。索引文件一般是特定的数据结构的持久化格式。不依赖于特定数据结构。文本处理就可以了。
* Tesseract-ocr的开销
  
* 全文索引技术
  全文检索技术
  目前支持全文检索功能还是基于文本文件来
  桌面的检索本质上是中英的全文检索
  关系数据库
  目前比较好用的全文检索库叫Lucene，使用Java实现，提供了Python API，叫PyLucene。
  另一方面MySQL和PostgreSQL也提供了全文检索功能，对于审计来说这个东西是必要的，可以加快检索的速度，也就是说除了图形这一块，字符也需要了解一下全文检索的使用。当然性能上不好说。而且对于中文的支持也是一个问题。
* 中文
* 关系数据库和文档数据库
  近期可能涉及，MongoDB和Mysql的区别问题，其实这个是两个数据模型的对比。目前主流的数据模型主要有三个：
  1) 关系模型
  2) 文档模型
  3) 图模型
  
  图模型目前只看到净云涉及到了，支持关系关系模型主要就是现在主流的数据库：MySQL、PostgreSQL和Oracle。
  特别需要注意的是传统的关系数据库目前正在和文档数据库融合的过程，PostgreSQL对文档模型的支持已经很不错了，MySQL则是刚刚起步。
* 关于数据库
* 关于依赖注入
** 工具使用上的问题
* 前端框架
* 零散
  - tesseract-ocr提供的样本库主要是印刷字体，也就是对于手写字体识别率其实很有限。

* 参考
  - [[https://baike.baidu.com/item/%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95/1140318?fr=aladdin][全文索引介绍]]
  - 《开发数据密集型应用》
