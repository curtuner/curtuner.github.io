#+TITLE: 网络基础结构
#+DATE: 2017-03-20
#+LAYOUT: post
#+TAGS: Network
#+CATEGORIES: Network

* 前言
  TCP/IP是一个四层的协议系统。主要定义四层，目前已经成为事实上的标准。分成了链路层、网络层、传输层和应用层。应用层协议可以不是二进制协议，如HTTP，它是进程间通信的约定。而其他协议都是二进制协议，说明它们要求高效通信。现代的计算机网络一般分成了五层，不过物理层主要涉及到了电路和很多专业的知识，所以没必要学习。实际上这个这个分层有很大的历史和政治原因。所以对于很多东西不能把它当作理所当然的设计。类似链路层和网络层，当作功能上的不同集合就可以了，每一层都向上一层提供服务。比如在802.11网络中链路层就是必要的，如何达成一个IP包的发送就是很大的问题。这些细节要对网络层隐藏。
* 网关
  网关是连接两个网络的设备，至于具体是路由器还是防火墙就不重要了，一旦终端发现目的IP不再同一个网段内，就会把包发往网关，一般如果要连接因特网，网关会把包的IP地址修改为因特网上的IP。
* 免费arp
  目的ip地址是自身的ip地址，即时获取自身mac地址的arp报文，但是依然会广播。正常情况下由自己响应arp报文，从而得到接口的mac地址，而如果网络中设置了重复的ip地址也可以在发送免费arp是察觉到。双机热备时，使用的是虚拟mac地址，但一台主设备出问题时要做的是概念交换机发送
* ARP表
  ARP表用于存储IP地址到MAC地址的映射，其项分成了设备动态学习到的 *动态ARP表项* 和手动添加的 *静态ARP表项* 。先查看目前本机的ARP表：
  #+BEGIN_SRC sh
    ip neighbor 
  #+END_SRC
  得到的表项的其中一个是：
  #+BEGIN_SRC sh
  192.168.106.50 dev enp0s25 lladdr 00:13:32:05:00:c4 STALE
  #+END_SRC
  可以看到除了ip和mac地址意外还有接口信息，这个设置防火墙是一样，其他的之后说。。。
  arp请求报文的格式
* ICMP（Internet Control Message Protocol）和ping
** 前言
  ping程序会发送ICMP回显请求给目标主机，等待目标主机发送回显应答报文。当然现在的网关也可以设置对这类报文不回显。并不存在ping服务器
** ping回应
   在自己的电脑ping一台主机后得到：
   [[./网络基础结构/ping_output.png]]
   
* IP选路

  IP选路的关键数据结构是路由表，Archlinux查看路由表的方法是：
  #+BEGIN_SRC sh
  ip route
  #+END_SRC
** 选路机制和选路策略
   选路机制是指搜索路由表并决定向哪个网络接口发送数据。路由机制是指
* IP
  PC上一般有路由守护程序，其维护的基本的数据结构是路由表
* DNS
  DNS是应用层协议，Linux提供了相应的函数来使用该服务。
* TCP
** 第一次握手的序列号为什么不是固定的
   为了避免因数据包被延迟的分组之后被传送从而干扰之后的新的连接的通信。
* sk_buf解析
** sk_buff
   sk_buff是Linux网络代码中最重要的数据结构，它用于处理报文。然而为了降低开销，sk_buff十分复杂。首先，网络需要处理的报文中有很多都是有联系的，为了在结构中表现这种联系，Linux使用双向链表结构来组织相关的报文：
   #+BEGIN_SRC C
     struct sk_buff {
	 // 必须在开头
	 struct sk_buff		*next;
	 struct sk_buff		*prev;

	 /*...*/
     }
   #+END_SRC
   
* 网卡接收和处理包
** 网卡受到正确MAC硬件地址的包之后的处理过程
   1) 把包解码后（一般对用户隐藏）存储到设备的一个缓冲区。
   2) 网卡产生一个中断
   3) 中断处理程序为包分配和初始化一个新的套接字缓冲区（sk_buff）
   4) 中断处理程序把设备内存储的包拷贝到套接字缓冲区中
   5) 中断处理程序调用函数把确定包的协议
   6) 中断处理程序调用netif_rx()函数通知Linux网络代码新的套接字已经到达，可以进行处理了
   ~netif_rx()~ 是网络层接收代码的入口点，对于从网络设备已经接收且等待各种协议栈层处理的包，内核使用每个CPU队列，把新的包加入到cpu的队列中。并调用 ~cpu_raise_softirq()~ 安排 ~NET_RX_SOFTIRQ~ 软中断的激活。该中断由 ~net_rx_action()~ 函数是实现。其执行步骤如下：
   1) 从队列提取一个包，如果队列为空，则函数终止。
   2) 确定在数据链路层中的网络层协议的编号。
   3) 调用网络层协议的适当函数
   IP协议的函数叫做 ~ip_rcv()~ ，该函数执行下列操作：
   1) 检查包和函数的校验和，如果损坏就丢弃它。
   2) 调用 ~ip_route_input()~ 
   
   ~udp_rcv()~ 本质进行如下操作：
   1) 调用 ~udp_v4_lookup()~ 查找
* 实验
** 访问百度首页
* 网络安全
** ARP欺骗
   
* 零散
  - 设备判断一个ip是否和本机ip是同一个网段的逻辑是这样的，对本机的ip和目标ip用本机掩码做并运算。如果发现不是同一个子网络，就要通过网关（路由器）转发。
  - 网关是一个概念，指的是连接两个不同网络的设备。路由器可以作为网关，三层交换机也可以作为网关。
  - 导致概念混乱的东西是NAT，对于外网而言每个。
  - NAT默认由路由器或交换机提供，没有经过NAT的情况下默认ip包的ip地址是不变的。
  - 为什么觉得MAC地址跟废的一样。
  - 局域网ip地址冲突时，冲突的两台电脑不能上，偶尔出现一台能上一台不能上，如果ip地址和服务器或交换机等网络设备冲突时，就会造成整个网络的瘫痪。一般ip地址冲突的。
  - ARP协议重其格式上看是属于链路层的，但其包含ip信息，所以也可以认为是网络层的。
  - MAC地址在路由过程中也可以完全不起作用。
** TODO ARP是在哪个时机发送的，为什么会是ICMP回显的时间加大？
   目前的推测是，arp是在链路层之上，在数据到达链路层之前协议栈是不知道缺少MAC地址的，所以此时就要发送arp报文了。不过数据包括时间是不变的，直到被处理。
* 参考
  - http://www.jianshu.com/p/d2cc9d24aa9e

   
