#+TITLE: 服务器基本知识
#+DATE: 2017-11-21
#+LAYOUT: post
#+TAGS: Server
#+CATEGORIES: Server, Linux

* 基本知识
** TCP网络编程和事件
   TCP网络编程最本质上需要处理的三个半事件：
   1) 连接的建立，包括服务端接受（accept）新连接和客户端成功发起（connect）连接。TCP连接一旦建立，客户端和服务端时平等的，可以各自收发数据。
   2) 连接断开，包括主动断开（close，shutdown）和被动断开(read返回0)。
   3) 消息到达，文件描述符可读。这是最为重要的事件，对它的处理方式决定了网络编程的风格（阻塞还是非阻塞，如何处理分包，应用层的缓冲如何设计，等等）。
   3.5) 消息发送完毕，这算半个。对于低流量的服务，可以不必关心这个事件，另外，这里的“完毕发送”是指将数据写入操作系统的缓冲区，将由TCP负责数据的发送和重传，不代表对方已经收到数据。
  
   为什么连接被动断开时read返回0呢？因为TCP提供基于连接的可靠的数据流服务。所以read返回0代表数据流已经到头了。
* muduo网络库参考
** 前言
   编写服务器的一大问题是使用何种网络库，我的想法是先尝试实现一个网络库，了解一个网络库的实现。
** socket包装
   先看一下对于socket接口的包装。
* 并发模型
** 一次服务一个客户
   
* 多线程模型实例
* 最大并发连接数问题
* sshd处理的方式
  
* 零散
  事件驱动和常规的自动机一样，都可以看作是事件的逻辑。如何实现事件的便利就是关键所在。
* TODO 问题
  - [ ] xrdp代理的时候是如何处理代理的程序的
* 参考
  - 《Linux多线程服务端编程》
  
