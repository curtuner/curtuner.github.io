#+TITLE: 网站功能记录
#+DATE: 2018-05-04
#+LAYOUT: post
#+TAGS: Web
#+CATEGORIES: Web

* 前言
  最近看了一个澳大利亚小哥拍的叫《原始技术》的一系列视频，突然也开始想要自己弄开发一个独立的环境。这里就列出这个环境需要的东西。这个环境主要的功能包括：
  - 工具箱（各种开发工具是基本的）
  - 资料室（关键是可以方便的阅览各种资源，不过大概避免不了盗版资源了）
  - 游戏室（至少能玩点无聊的小游戏）
  - 云笔记（可以随时随地记录想法）
* 实体（模型）
  首先作为一个个人网站，最重要的应该是资源的处理，可能是个人的文章、资料、个人编写的应用、笔记、报告等，其中个人的应用往往要和文件、资料和笔记相互关联。本质上，这就是一个整合各种资源的网站，个人是要完成一个平台，所以概念上比较抽象，暂时只能这样。建立关联才是最重要的。
  这里先完成几个样例，文章可以指向很多的本地静态资源，个人笔记，和测试的应用，所以要有很多也就是核心还是文章。笔记可能会属于文章的前身，很多笔记可能会生成文章。其他的都是资源。之后就是应用了。应用要独立于文章，是个人网站中两个比较独立的部分。独立的应用就给出独立的页面就可以了，文章可以应用这些应用就可以了。当然还有一些应用的输入输出要作为笔记之类的文章前身来处理。文章要依托于各种资源最终生成。所以先完成文章系统，提供机制，之后完成基于文章系统的各种新应用，这就是大体的开发阶段。所以是先完成文章的系统。
** 文章
   目前的想法是使用，org-mode来导出文档，但是这显然应该是实现细节，所以这里的entities应该是最抽象的应用逻辑的对象。
   #+BEGIN_SRC python
     class BtDocument:
         def __init__(self, *, title, body):
             self.title = None
             self.body = None

   #+END_SRC
   这里就显示了动态语言的优越性了，符号的类型是动态的，所以类型天然不会暴露。方便了很多。
** 资源
   #+BEGIN_SRC python
        class BtResource:
            """
            
            """
            def __init__(self):
                self.type = None
                self.
   #+END_SRC
** 笔记
** 报告
** 应用
* 文章系统
  文章应该是最终的呈现，一旦输出了文章，大概就到了实例的尽头，更新文章也作为生成文章的方式。文章输出成什么格式就不好说了，这个属于底层细节。
* 笔记
  个人一般使用Emacs的org-mode来写笔记。目前很多人完成了这个功能。
* 资料收藏
  过去有使用网站的连接来收藏资料的习惯，当是事件就了之后连接常常会失效，所以需要一个可以根据链接完成资料“固化”的功能，保存成pdf或者其他格式最好。
* 框架选择
  看过《Clean Architecture》之后可以肯定，框架其实属于最底层的部分，所以其实前期可以使用比较简单的框架来完成基本的功能，之后有什么问题在调整，这样问题也不大。
