#+TITLE: 关于二叉树的思考
#+DATE: 2017-09-04
#+LAYOUT: post
#+TAGS: Algorithm
#+CATEGORIES: Algorithm
#+OPTIONS ^:nil

* 前言
  最近开始做一些关于二叉树的题目，所以这其中的思考记录下来。
* 前缀、中缀和后缀表达式
  生活中我们对于中缀表达式的使用更加熟悉，我们的自然语言也是主谓宾的格式。然而着中缀的问题是如果不读完整个表达式，就可能无法得到实际运算
* 顺序
  二叉树的遍历分成了前、中、后序遍历。然而考察一下具体的过程。一般我们实现的二叉树都要求我们从树根开始遍历。这就意味着你无论如何无法摆脱中序。由于使用递归的遍历方式借助了函数调用栈所以这里我先，使用非递归方式来实现。
  先看看中序遍历的实现：
  #+BEGIN_SRC C
    void print_tree(BTree* tree) {
	print_tree(tree->left);
	print_tree(tree->right);
    }
  #+END_SRC
* 递归
  某种程度上递归描述的是同质的依赖关系，如果可以完全描述才使用递归。递归下降又可以怎么理解。

